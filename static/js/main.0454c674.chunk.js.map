{"version":3,"sources":["hooks/useData.js","StockFetcher/Extended.js","StockFetcher/Canvas.js","StockFetcher/Standard.js","StockFetcher/Main.js","StockFetcher/index.js","ListPage/context/reducer.js","ListPage/context/index.js","ListPage/Memberships.js","Components/FilterTable/config.js","Components/FilterTable/Head.js","Components/FilterTable/utils.js","utils/string.ts","Components/FilterTable/Table.js","Components/FilterTable/index.js","ListPage/images/search.js","ListPage/Search.js","ListPage/Chips.js","ListPage/SubList.js","ListPage/images/left_big.svg","ListPage/images/right_big.svg","ListPage/context/mockData.js","ListPage/ListPage.js","ListPage/index.js","Components/ExpandableTable/Table.js","Components/ExpandableTable/index.js","Components/NavBar/index.js","Components/NavBar/NavBar.js","images/chart.jpg","images/list_table.png","images/expand_table.png","App.js","serviceWorker.js","index.js"],"names":["dataFetchReducer","state","action","type","isLoading","isError","data","payload","Error","defaultState","useDataApi","symbol","seriesType","initialUrl","initialData","useState","url","setUrl","useReducer","dispatch","useEffect","a","axios","result","Note","extendedData","split","rows","slice","extendedByDate","map","row","time","substring","rowData","dataPoints","fetchData","updateUrl","Extended","INTERVAL_KEY","defaultApiData","getBaseWeightedPrice","price","startingPrice","Number","getXData","res","Object","keys","getYData","values","Canvas","spyDataPoints","earliestDataPoint","latestDataPoint","earliestSPYDataPoint","latestSPYDataPoint","this","props","spyData","timeIntervalKeys","timeIntervalValues","lastIndex","length","i","push","x","Date","y","spyTimeIntervalKeys","spyTimeIntervalValues","setState","chart","render","search","timeStamps","latestDate","earliestDate","diffInTime","getTime","diffInDays","Math","round","lastUpdate","options","theme","animationEnabled","title","text","axisY","prefix","axisX","interVal","interValType","labelFormatter","e","CanvasJS","formatDate","value","toolTip","shared","name","showInLegend","xValueType","xValueFormatString","yValueFormatString","navigator","slider","minimum","maximum","spyGrowth","parseFloat","toFixed","stockGrowth","Card","variant","style","margin","width","CardContent","Typography","gutterBottom","containerProps","height","onRef","ref","React","Component","Standard","apiError","Name","Exchange","MarketCapitalization","Sector","color","toString","replace","API_KEY","isExtended","initialTimeSeriesData","Symbol","initialFundamentals","getSeriesUrl","final","getFundamentalsUrl","Main","setSymbol","setSearch","setSeriesType","setApiError","fundamentalsData","fundamentalsIsLoading","fundamentalsIsError","updateFundamentalsUrl","newApiError","Boolean","onSubmit","event","preventDefault","onChange","target","padding","fontSize","onClick","Fragment","chips","members","StateContext","createContext","StateProvider","initialState","children","Provider","listPageContext","useListPageContext","useContext","useStyles","makeStyles","root","spacing","MemberSetup","setName","annual_fee","setFee","code","membership_type","setType","country","setCountry","currency","setCurrency","from_date","setFromDate","countriesReference","currenciesReference","membershipTypesReference","handleFormChange","id","find","propEq","classes","className","noValidate","autoComplete","Grid","container","justify","FormControl","InputLabel","htmlFor","Input","Select","labelId","option","MenuItem","description","disabled","TextField","label","InputLabelProps","shrink","Button","updatedMembers","to_date","headCells","numeric","disablePadding","Head","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","dateVal","toLocaleDateString","weekday","year","month","day","descendingComparator","b","stableSort","array","comparator","getComparator","stabilizedThis","el","index","sort","newOrder","formatCurrency","currencyStyle","formatted","Intl","NumberFormat","format","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","primary","dark","flex","EnhancedTableToolbar","selected","setSelected","clsx","component","Tooltip","IconButton","aria-label","updated","filter","paper","marginBottom","table","minWidth","border","clip","overflow","position","top","Table","setOrder","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","Paper","TableContainer","aria-labelledby","size","newSelecteds","n","TableBody","isItemSelected","indexOf","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","SVG","right","bottom","enableBackground","fill","viewBox","version","d","Search","searchBy","searchText","handleSearch","placeholder","getNewMembers","newMembers","forEach","currChip","member","filterBy","filterText","Toolbar","chip","Chip","onDelete","newchips","findIndex","item","splice","toggleChips","calcuateFilteredData","every","withStyles","maxWidth","background","filterFacets","setMembers","isIchecked","handleToggle","newChecked","List","ListItem","button","disableRipple","ListItemText","_extends","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","_ref3","SvgLeftBig","_ref","svgRef","titleId","xmlns","ForwardRef","SvgRightBig","faker","findName","address","finance","currencySymbol","amount","date","past","future","uniqBy","prop","generateData","initialChipData","ListPage","chipData","countryFilterData","setCountryFilterData","currencyFilterData","setCurrencyFilterData","searchTextCountries","setSearchTextCountries","searchTextCurrencies","setSearchTextCurrencies","searchTextMemberships","setSearchTextMemberships","open","setOpen","sideWidth","setSideWidth","mainWidth","setMinWidth","rightIconVisibility","setIconVisibility","mainDisplay","setMainDisplay","overflowY","maxHeight","display","float","textAlign","alt","Divider","includes","word","charAt","toUpperCase","SubList","curr","visibility","FilterTable","Memberships","tempData","status","tasks","name1","name2","percent","renderGridSubColumns","taskName","columns","Column","expandedRows","setExpanded","allItemRows","setData","renderItem","itemRows","Row","rowId","currentExpandedRows","newExpandedRows","handleRowClick","Cell","colSpan","renderItemDetails","perItemRows","Segment","basic","selectable","Header","HeaderCell","Body","NavBar","curPage","document","URL","substr","lastIndexOf","routeIndex","links","getElementById","classList","add","AppBar","elevation","href","Copyright","getFullYear","app","minHeight","icon","marginRight","heroContent","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardActions","justifyContent","cardContent","flexGrow","footer","Album","CssBaseline","exact","path","Container","paragraph","xs","sm","md","CardMedia","image","expandImg","CardActions","to","listImg","window","location","hostname","match","ReactDOM","StrictMode","basename","process","bg","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0454c674.chunk.js","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react'\nimport axios from 'axios'\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      }\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      }\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      }\n    default:\n      throw new Error()\n  }\n}\n\nconst defaultState = {\n  data: {\n    'Meta Data': {\n      \"1. Information\": \"Intraday (15min) open, high, low, close prices and volume\",\n      \"2. Symbol\": \"SPY\",\n      \"3. Last Refreshed\": \"2021-12-02 20:00:00\",\n      \"4. Interval\": \"15min\",\n      \"5. Output Size\": \"Full size\",\n      \"6. Time Zone\": \"US/Eastern\"\n    },\n    'Time Series (15min)': {\n      \"2021-10-22 04:15:00\": {\n        \"1. open\": 70.1025,\n        \"2. high\": 73.1825,\n        \"3. low\": 69.1825,\n        \"4. close\": 71.0543,\n        \"5. volume\": 101\n      }\n    }\n  }\n}\n\n// TO DO: This hooks needs to rely less on initial data so that \n// we can swap it for a different data source in the future\nconst useDataApi = (symbol, seriesType, initialUrl, initialData = defaultState) => {\n  const [url, setUrl] = useState(initialUrl)\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData,\n  })\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' })\n      try {\n        const result = await axios(url)\n        \n        // This means we hit the daily threshold of 5 calls per minute\n        if (result.data.Note) dispatch({ type: 'FETCH_FAILURE' })\n        \n        if (seriesType === \"TIME_SERIES_INTRADAY_EXTENDED\") {\n          // Parse csv result here\n          const extendedData = result.data.split(\"\\r\\n\")\n          const rows = extendedData.slice(1)\n          let extendedByDate = {}\n\n          // iterate through these\n          rows.map((row) => {\n            const time = row.substring(0, 19)\n            const rowData = row.substring(20)\n            const dataPoints = rowData.split(\",\")\n            if (rowData) extendedByDate[time] = {\n              \"1. open\": dataPoints[0],\n              \"2. high\": dataPoints[1],\n              \"3. low\":  dataPoints[2],\n              \"4. close\": dataPoints[3],\n              \"5. volume\": dataPoints[4]\n            }\n          })\n          dispatch({ type: 'FETCH_SUCCESS', payload: {\n            data: {\n              'Meta Data': { \n                \"1. Information\": \"Intraday (15min) open, high, low, close prices and volume\",\n                \"2. Symbol\": symbol,\n                \"3. Last Refreshed\": \"2021-12-02 20:00:00\",\n                \"4. Interval\": \"15min\",\n                \"5. Output Size\": \"Full size\",\n                \"6. Time Zone\": \"US/Eastern\"\n               },\n              'Time Series (15min)': extendedByDate\n            }\n          } })\n        }\n\n        else {\n          dispatch({ type: 'FETCH_SUCCESS', payload: result })\n        }\n      } catch (error) {\n        dispatch({ type: 'FETCH_FAILURE' })\n      }\n    }\n\n    if (symbol) fetchData()\n  }, [symbol, seriesType, url])\n\n  const updateUrl = (url) => setUrl(url)\n\n  return { ...state, updateUrl }\n}\n\nexport default useDataApi\n","// Documentation for canvas js: https://canvasjs.com/docs\n// Documentation for alpha advantage: https://www.alphavantage.co/documentation/\n\nimport React, { Fragment } from 'react'\n\n// TO DO: Will need to accumulate different monthly slices to calculate oevr a longer time horizon\n// Also because of 5 call limit it is hard to develop this feature\n// But given the potential use cases will consider signing up\nfunction Extended() {\n  return (\n    <Fragment>\n      <div>Coming Soon</div>\n    </Fragment>\n  )\n}\n\nexport default Extended\n","/* App.js */\nimport React from 'react'\nimport { CanvasJS, CanvasJSChart } from 'canvasjs-react-charts'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\n\nconst INTERVAL_KEY = 'Time Series (15min)'\nconst defaultApiData = { INTERVAL_KEY: {} }\n\n// Get price calculation based on initial investment ($100 for simplicity)\nconst getBaseWeightedPrice = (price, startingPrice) =>\n  Number((100 / startingPrice) * price)\n\n// Get x axis data (simple date or datetime)\nconst getXData = (res) => {\n  if (!res[INTERVAL_KEY]) return ['2021-01-01']\n  return Object.keys(res[INTERVAL_KEY])\n}\n\n// Get y axis data (price corresponding to it)\nconst getYData = (res) => {\n  if (!res[INTERVAL_KEY]) return [{ '4.close': 0.0 }]\n  return Object.values(res[INTERVAL_KEY])\n}\n\nclass Canvas extends React.Component {\n  state = {\n    dataPoints: [],\n    spyDataPoints: [],\n    earliestDataPoint: 0,\n    latestDataPoint: 0,\n    earliestSPYDataPoint: 0,\n    latestSPYDataPoint: 0\n  }\n\n  componentDidMount() {\n    const { data = defaultApiData, spyData } = this.props\n    const dataPoints = []\n    const timeIntervalKeys = getXData(data) // date strings in reverse order\n    const timeIntervalValues = getYData(data)\n    const lastIndex = timeIntervalKeys.length - 1\n    const earliestDataPoint = timeIntervalValues[lastIndex]\n      ? timeIntervalValues[lastIndex]['4. close']\n      : 0\n    const latestDataPoint = timeIntervalValues[0]\n      ? timeIntervalValues[0]['4. close']\n      : 0\n\n    for (var i = lastIndex; i > 0; i--) {\n      dataPoints.push({\n        x: new Date(timeIntervalKeys[i]),\n        y: getBaseWeightedPrice(\n          timeIntervalValues[i] ? timeIntervalValues[i]['4. close'] : \"0.00\",\n          earliestDataPoint\n        ),\n      })\n    }\n\n    const spyDataPoints = []\n    const spyTimeIntervalKeys = getXData(spyData) // date strings in reverse order\n    const spyTimeIntervalValues = getYData(spyData)\n    const earliestSPYDataPoint = spyTimeIntervalValues[lastIndex]\n      ? spyTimeIntervalValues[lastIndex]['4. close']\n      : 0\n    const latestSPYDataPoint = spyTimeIntervalValues[0]\n      ? spyTimeIntervalValues[0]['4. close']\n      : 0\n    for (var i = lastIndex; i > 0; i--) {\n      spyDataPoints.push({\n        x: new Date(spyTimeIntervalKeys[i]),\n        y: getBaseWeightedPrice(\n          spyTimeIntervalValues[i] && spyTimeIntervalValues[i]['4. close'],\n          earliestSPYDataPoint\n        ),\n      })\n    }\n    this.setState({\n      dataPoints,\n      spyDataPoints,\n      earliestDataPoint,\n      latestDataPoint,\n      earliestSPYDataPoint,\n      latestSPYDataPoint\n    })\n\n    this.chart.render()\n  }\n\n  componentWillUnmount() {\n    this.chart = null\n  }\n\n  // Get data points for the given ticker and the benchmark (SPY)\n  render() {\n    const { data, search, symbol } = this.props\n    const { \n      earliestDataPoint,\n      latestDataPoint,\n      earliestSPYDataPoint,\n      latestSPYDataPoint\n    } = this.state\n\n    // x-axis data (not sure why but is coming in reverse chronological order)\n    const timeStamps = getXData(data)\n    const latestDate =  new Date(timeStamps[0])\n    const earliestDate = new Date(timeStamps[timeStamps.length - 1])\n    \n    // Helpers to get the no. of days between first and last datapoints\n    const oneDay = 1000 * 60 * 60 * 24;\n    const diffInTime = latestDate.getTime() - earliestDate.getTime();\n    const diffInDays = Math.round(diffInTime / oneDay);\n   \n    const lastUpdate = data[\"Meta Data\"] && data[\"Meta Data\"][\"3. Last Refreshed\"]\n    const options = {\n      theme: 'light2',\n      animationEnabled: true,\n      title: {\n        text: `Historical Price Comparison: ${search} vs SPY over the last ${diffInDays} days`,\n      },\n      axisY: {\n        title: 'Price (weighted to 100$)',\n        prefix: '$',\n      },\n      axisX: {\n        title: 'Day',\n        interVal: 1,\n        interValType: 'day',\n        labelFormatter: function (e) {\n          return CanvasJS.formatDate(e.value, 'DD MMM')\n        },\n      },\n      toolTip: {\n        shared: true,\n      },\n      data: [\n        {\n          type: 'spline',\n          name: `${search}`,\n          showInLegend: true,\n          xValueType: 'dateTime',\n          xValueFormatString: 'DD MMM YYYY',\n          yValueFormatString: '$##.00',\n          dataPoints: this.state.dataPoints,\n        },\n        {\n          type: 'spline',\n          name: 'SPY',\n          showInLegend: true,\n          xValueType: 'dateTime',\n          xValueFormatString: 'DD MMM YYYY',\n          yValueFormatString: '$##.00',\n          dataPoints: this.state.spyDataPoints,\n        },\n      ],\n      navigator: {\n        slider: {\n          minimum: earliestDate,\n          maximum: latestDate,\n        },\n      },\n    }\n\n    const containerProps = {\n      width: '100%',\n      height: '450px',\n      margin: 'auto',\n    }\n\n    const metricsContainer = {\n      \"background-color\": \"#f9b79f\"\n    }\n\n    const spyGrowth = parseFloat((latestSPYDataPoint-earliestSPYDataPoint)/earliestSPYDataPoint * 100).toFixed(2)\n    const stockGrowth = parseFloat((latestDataPoint-earliestDataPoint)/earliestDataPoint * 100).toFixed(2)\n\n    return (\n      <>\n        <Card variant=\"outlined\"\n          style={{\n            margin: \"10px auto\",\n            width: \"70%\"\n        }}>\n          <CardContent>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              SPY Growth: {spyGrowth}%\n            </Typography>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              {search} Growth: {stockGrowth}%\n            </Typography>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Last Updated: {lastUpdate}\n            </Typography>\n          </CardContent>\n        </Card>\n        <div>\n          <CanvasJSChart\n            containerProps={containerProps}\n            options={options}\n            onRef={(ref) => (this.chart = ref)}\n          />\n          {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Canvas\n","// Documentation for canvas js: https://canvasjs.com/docs\n// Documentationf for alpha advantage: https://www.alphavantage.co/documentation/\n\nimport React, { Fragment } from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Canvas from './Canvas'\n\n// regex to look for any point in the string that has a multiple of 3 digits in a row after it,\nexport const numberWithCommas = (x) => {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nfunction Standard(props) {\n  const  {\n    search,\n    symbol,\n    apiError,\n    isLoading,\n    seriesType,\n    Name,\n    Exchange,\n    MarketCapitalization,\n    Sector,\n    data,\n    spyData\n  } = props\n  return (\n    <Fragment>\n      {!search && <div>Click search to get data for ticker symbol...</div>}\n      {apiError && <div>{apiError}</div>}\n      {!apiError && search && isLoading && <div>Loading ...</div>}\n      {!apiError && search && !isLoading && (\n        <div>\n          {(seriesType) &&\n            <div>\n              <p>{symbol}</p>\n              <div\n                style={{\n                  margin: '10px auto',\n                  width: '70%'\n                }}\n              >\n                {/* {metaData.map(el => (\n                  <Card variant=\"outlined\">\n                    <CardContent>\n                      <Typography color=\"textSecondary\" gutterBottom>\n                        {el.split(\". \")[1]}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                ))} */}\n                <Card variant=\"outlined\">\n                  <CardContent>\n                    <Typography color=\"textPrimary\" gutterBottom>\n                      {Name}\n                    </Typography>\n                    <Typography color=\"textSecondary\" gutterBottom>\n                      Exchange: {Exchange}\n                    </Typography>\n                    <Typography color=\"textSecondary\" gutterBottom>\n                      Sector: {Sector}\n                    </Typography>\n                    <Typography color=\"textSecondary\" gutterBottom>\n                      Market CAP: ${numberWithCommas(MarketCapitalization)}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </div>\n              <Canvas\n                search={search}\n                data={data.data}\n                spyData={spyData.data.data}\n                symbol={symbol}\n              />\n            </div>\n          }\n        </div>\n      )}\n    </Fragment>\n  )\n}\n\nexport default Standard\n","// Documentation for canvas js: https://canvasjs.com/docs\n// Documentation for alpha advantage: https://www.alphavantage.co/documentation/\n\nimport React, { Fragment, useState, useEffect } from 'react'\nimport useDataApi from '../hooks/useData'\nimport Extended from './Extended'\nimport Standard from './Standard'\n\nconst API_KEY = '1PXX8A1J2QJQFTBP'\nconst TICKER = 'JPM'\nconst interval = '15min' // time interval between two consecutive data points\nconst outputSize = 'full' // number of data points\nconst overView = 'OVERVIEW' // type of query\n\n// helpers\nconst isExtended = (type) => type === \"TIME_SERIES_INTRADAY_EXTENDED\"\n\n// regex to look for any point in the string that has a multiple of 3 digits in a row after it,\nexport const numberWithCommas = (x) => {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nconst initialTimeSeriesData = {\n  data: { 'Meta Data': { Symbol: \"SPY\" }, 'Time Series (15min)': {} },\n}\nconst initialFundamentals = {\n  data: { Name: '', Exchange: '', Sector: '', MarketCapitalization: '' },\n}\n\nconst getSeriesUrl = (symbol, seriesType) => {\n  // TO DO: Extend this to include multiple months\n  // Maybe surface it via the UI?\n  const slice = \"year1month1\"\n  const baseUrl = 'https://www.alphavantage.co/query'\n  let final = `${baseUrl}?function=${seriesType}&symbol=${symbol}&interval=${interval}&outputsize=${outputSize}&apikey=${API_KEY}&adjusted=true`\n  if (isExtended(seriesType)) final += `&slice=${slice}`\n  return final\n}\n\nconst getFundamentalsUrl = (symbol) => {\n  const baseUrl = 'https://www.alphavantage.co/query'\n  return `${baseUrl}?function=${overView}&symbol=${symbol}&apikey=${API_KEY}`\n}\n\nfunction Main() {\n  const [symbol, setSymbol] = useState(TICKER) // set on type\n  const [search, setSearch] = useState(TICKER) // set on click\n  const [seriesType, setSeriesType] = useState('TIME_SERIES_INTRADAY');\n  const [apiError, setApiError] = useState('')\n\n  const handleSelectChange = (event) => {\n    setSeriesType(event.target.value)\n    setSearch(\"\")\n    setSymbol(\"\")\n    setApiError(\"\")\n    event.preventDefault() // prevent bubbling up\n  }\n\n  // S&P data fetch called on render and series type change\n  const spyData = useDataApi('SPY', seriesType, getSeriesUrl('SPY', seriesType), initialTimeSeriesData)\n\n  // Full data for the search term\n  const { data, isLoading, isError, updateUrl } = useDataApi(\n    search,\n    seriesType,\n    getSeriesUrl(search, seriesType),\n    initialTimeSeriesData\n  )\n  useEffect(() => {\n    if (search && !isLoading) {\n      updateUrl(getSeriesUrl(search, seriesType))\n    }\n  }, [search, seriesType])\n  // Fundamentals data for the search term\n  const {\n    data: fundamentalsData,\n    isLoading: fundamentalsIsLoading,\n    isError: fundamentalsIsError,\n    updateUrl: updateFundamentalsUrl,\n  } = useDataApi(search, seriesType, getFundamentalsUrl(search), initialFundamentals)\n  const {\n    Name,\n    Exchange,\n    Sector,\n    MarketCapitalization = 0,\n  } = fundamentalsData.data\n  useEffect(() => {\n    if (search && !fundamentalsIsLoading) {\n      updateFundamentalsUrl(getFundamentalsUrl(search))\n    }\n  }, [search, seriesType])\n\n  // Set corresponding errors if any from the above  \n  useEffect(() => {\n    let newApiError =\n      isError ||\n      fundamentalsIsError ||\n      fundamentalsData.data.Note ||\n      data.data.Note ||\n      spyData.data.data.Note\n    setApiError(Boolean(newApiError) ? \"Daily Limit Reached\": \"\")\n  }, [search, seriesType, data.data])\n\n  return (\n    <Fragment>\n      <form\n        onSubmit={(event) => {\n          event.preventDefault()\n          updateUrl(getSeriesUrl(search, seriesType))\n        }}\n      >\n        <select\n          onChange={handleSelectChange}\n          style={{\n          width: \"147px\",\n          padding: \"2px\",\n          fontSize: \"14px\"\n        }}>\n          <option value=\"TIME_SERIES_INTRADAY\">Intraday</option>\n          <option value=\"TIME_SERIES_INTRADAY_EXTENDED\">Extended</option>\n        </select>\n        <input\n          type=\"text\"\n          value={symbol}\n          onChange={(event) => setSymbol(event.target.value)}\n        />\n        <button onClick={() => setSearch(symbol)} type=\"submit\">\n          Search\n        </button>\n      </form>\n      <React.Fragment>\n        {!isExtended(seriesType) && <Standard\n          search={search}\n          symbol={symbol}\n          apiError={apiError}\n          isLoading={isLoading}\n          seriesType={seriesType}\n          Name={Name}\n          Exchange={Exchange}\n          MarketCapitalization={MarketCapitalization}\n          Sector={Sector}\n          data={data}\n          spyData={spyData}\n        />}\n        {isExtended(seriesType) && <Extended/>}\n      </React.Fragment>\n    </Fragment>\n  )\n}\n\nexport default Main\n","import Main from './Main'\n\nexport default Main\n","export default (state, action) => {\n  switch (action.type) {\n    case 'update_chips':\n      return {\n        ...state,\n        chips: action.data,\n      }\n    case 'update_members':\n      return {\n        ...state,\n        members: action.data,\n      }\n    default:\n      return state\n  }\n}","// Global state for announcement dialog\nimport React, { createContext, useContext, useReducer } from 'react'\nimport listPageContext from './reducer'\n\nexport const StateContext = createContext()\n\nexport const StateProvider = ({ initialState, children }) => (\n  <StateContext.Provider value={useReducer(listPageContext, initialState)}>\n    {children}\n  </StateContext.Provider>\n)\n\nexport const useListPageContext = () => useContext(StateContext) // This is to avoid duplication on the consumer side\n","import React, { useState, useEffect } from 'react'\nimport { find, propEq } from 'ramda'\nimport {\n  Grid,\n  FormControl,\n  TextField,\n  MenuItem,\n  InputLabel,\n  Input,\n  Select,\n  Button,\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useListPageContext } from './context'\nimport './styles.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}))\n\nconst MemberSetup = (props) => {\n  const [name, setName] = useState('')\n  const [annual_fee, setFee] = useState(0)\n  const [membership_type, setType] = useState({ code: '' })\n  const [country, setCountry] = useState({ code: '' })\n  const [currency, setCurrency] = useState({ code: '' })\n  const [from_date, setFromDate] = useState('')\n\n  const {\n    countriesReference,\n    currenciesReference,\n    membershipTypesReference,\n  } = props\n  const [data, dispatch] = useListPageContext()\n  const { members } = data\n\n  useEffect(() => {\n    setName('John')\n    setFee(10)\n    setCountry(countriesReference[0])\n    setCurrency(currenciesReference[0])\n    setType(membershipTypesReference[0])\n    setFromDate('2021-05-24')\n  }, [])\n\n  const clearForm = () => {\n    setName('')\n    setFee(0)\n    setType('')\n    setCountry('')\n    setCurrency('')\n    setFromDate('')\n  }\n\n  const handleFormChange = (event, id) => {\n    const fieldId = id || event.target.id\n    switch (fieldId) {\n      case 'name':\n        setName(event.target.value)\n        break\n      case 'country':\n        setCountry(find(propEq('code', event.target.value), countriesReference))\n        break\n      case 'currency':\n        setCurrency(\n          find(propEq('code', event.target.value), currenciesReference)\n        )\n        break\n      case 'annual_fee':\n        setFee(event.target.value)\n        break\n      case 'membership_type':\n        setType(\n          find(propEq('code', event.target.value), membershipTypesReference)\n        )\n        break\n      case 'from_date':\n        setFromDate(event.target.value)\n        break\n      default:\n        break\n    }\n  }\n\n  const handleAdd = (e) => {\n    e.preventDefault()\n    const updatedMembers = members\n    updatedMembers.push({\n      name: name,\n      country: country.description,\n      membership_type: membership_type.description,\n      currency: currency.description,\n      annual_fee: annual_fee,\n      from_date: from_date,\n      to_date: '30th Jun, 2021',\n    })\n    dispatch({ type: 'update_members', data: updatedMembers })\n    clearForm()\n  }\n\n  const classes = useStyles()\n\n  return (\n    <div>\n      <h3>Add new member</h3>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <Grid container justify=\"space-around\">\n          <FormControl>\n            <InputLabel htmlFor=\"name\">Name</InputLabel>\n            <Input\n              id=\"name\"\n              value={name}\n              onChange={(e) => handleFormChange(e, 'name')}\n            />\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"country\">Country</InputLabel>\n            <Select\n              labelId=\"country\"\n              id=\"country\"\n              value={country.code}\n              onChange={(e) => handleFormChange(e, 'country')}\n            >\n              {countriesReference.map((option) => (\n                <MenuItem\n                  id={`${option.code}_cntry`}\n                  key={option.code}\n                  value={option.code}\n                >\n                  {option.description}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"membership\">Type</InputLabel>\n            <Select\n              labelId=\"membership\"\n              id=\"membership\"\n              value={membership_type.code}\n              onChange={(e) => handleFormChange(e, 'membership_type')}\n            >\n              {membershipTypesReference.map((option) => (\n                <MenuItem\n                  id={`${option.code}_membership`}\n                  key={option.code}\n                  value={option.code}\n                >\n                  {option.description}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"membership\">Currency</InputLabel>\n            <Select\n              labelId=\"currency\"\n              id=\"currency\"\n              value={currency.code}\n              onChange={(e) => handleFormChange(e, 'currency')}\n            >\n              {currenciesReference.map((option) => (\n                <MenuItem\n                  id={`${option.code}_currency`}\n                  key={option.code}\n                  value={option.code}\n                >\n                  {option.description}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel htmlFor=\"annual_fee\">Annual Fee</InputLabel>\n            <Input\n              id=\"annual_fee\"\n              value={annual_fee}\n              onChange={(e) => handleFormChange(e, 'annual_fee')}\n              disabled={false}\n            />\n          </FormControl>\n          <FormControl>\n            <TextField\n              id=\"from_date\"\n              label=\"From Date\"\n              type=\"date\"\n              value={from_date}\n              onChange={(e) => handleFormChange(e, 'from_date')}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              disabled={false}\n            />\n          </FormControl>\n        </Grid>\n      </form>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleAdd}\n        className={'addButton'}\n      >\n        Add\n      </Button>\n    </div>\n  )\n}\n\nexport default MemberSetup\n","export const headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n  {\n    id: 'membershipType',\n    numeric: false,\n    disablePadding: false,\n    label: 'Membership Type',\n  },\n  { id: 'country', numeric: false, disablePadding: false, label: 'Country' },\n  {\n    id: 'currency',\n    numeric: false,\n    disablePadding: false,\n    label: 'Currency',\n  },\n  { id: 'annual_fee', numeric: true, disablePadding: false, label: 'Fee' },\n  { id: 'from', numeric: false, disablePadding: false, label: 'From' },\n  { id: 'to', numeric: false, disablePadding: false, label: 'To' },\n]\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  TableSortLabel,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from '@material-ui/core'\n\nimport { headCells } from './config'\n\nfunction Head(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props\n  const sortHandler = (property) => (event) => {\n    onRequestSort(event, property)\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={sortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n}\n\nexport default Head\n","export const formatDate = (dateVal) => {\n  const options = {\n    weekday: 'short',\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  }\n  return new Date(dateVal).toLocaleDateString('en-US', options)\n}\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\nconst getComparator = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nexport const stableSort = (array, order, orderBy) => {\n  const comparator = getComparator(order, orderBy)\n  const stabilizedThis = array.map((el, index) => [el, index])\n  stabilizedThis.sort((a, b) => {\n    const newOrder = comparator(a[0], b[0])\n    if (newOrder !== 0) return newOrder\n    return a[1] - b[1]\n  })\n  return stabilizedThis.map((el) => el[0])\n}\n","export const formatCurrency = (value: number = 0.00, currencyStyle: string = 'USD') => {\n  const formatted = `${new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: `${currencyStyle}`,\n  }).format(value)}`\n\n  return formatted\n}\n\nexport const capitalize = (word: string | null): string => {\n  if (!word) return ''\n  return word.charAt(0).toUpperCase() + word.slice(1)\n}\n\n// // function to format date to normal form\n// export const formatDate = value => moment(new Date(value)).format(\"MM/DD/YYYY\");\n\n// // function to fomrat time to hh:mm:ss\n// export const formatTime = value => {\n//   return moment.tz(value, \"America/Los_Angeles\").format(\"HH:mm:ss\");\n// };\n\n// // function to fomrat date to MM/DD/YYYY pacific\n// export const formatDateInPacific = value =>\n//   moment.tz(value, \"America/Los_Angeles\").format(\"MM/DD/YYYY\");\n\n// // function to fomrat date time to MM/DD/YYYY HH:mm:ss z pacific\n// export const formatDateTimeInPacific = (value, format) =>\n//   //momentTimezone.tz(value, 'America/Los_Angeles').format(format)\n//   \"\";\n\n// // function to format date to normal form ignoring timeZone\n// export const formatDateIgnoringTimeZone = value =>\n//   moment.utc(value).format(\"MM/DD/YYYY\");\n\n// // function to format date and time to normal form\n// export const formatDateTimeIgnoringTimeZone = value =>\n//   moment(new Date(value)).format(\"MM/DD/YYYY HH:mm:ss\");","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nimport EnhancedTableHead from './Head'\nimport { formatDate, stableSort } from './utils'\nimport { formatCurrency } from '../../utils/string'\nimport { useListPageContext } from '../../ListPage/context' // TO DO: Make this generic\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}))\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles()\n  const { rows, selected, setSelected, dispatch } = props\n  const numSelected = selected.length\n\n  const deleteMembers = () => {\n    const updated = rows.filter((row, i) => selected[i] !== row.name)\n    dispatch({ type: 'update_members', data: updated })\n    setSelected([])\n  }\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Memberships\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\" onClick={deleteMembers}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  selected: PropTypes.arrayOf(PropTypes.string),\n  rows: PropTypes.array.isRequired,\n  dispatch: () => {},\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}))\n\nexport default function EnhancedTable() {\n  const classes = useStyles()\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [selected, setSelected] = React.useState([])\n  const [page, setPage] = React.useState(0)\n  const [dense, setDense] = React.useState(false)\n  const [rowsPerPage, setRowsPerPage] = React.useState(10)\n  const [data, dispatch] = useListPageContext()\n  const rows = data.members\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name)\n      setSelected(newSelecteds)\n      return\n    }\n    setSelected([])\n  }\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name)\n    let newSelected = []\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name)\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1))\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1))\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      )\n    }\n\n    setSelected(newSelected)\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked)\n  }\n\n  const isSelected = (name) => selected.indexOf(name) !== -1\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar\n          rows={rows}\n          selected={selected}\n          setSelected={setSelected}\n          dispatch={dispatch}\n        />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, order, orderBy)\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name)\n                  const labelId = `enhanced-table-checkbox-${index}`\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{\n                            'aria-labelledby': labelId,\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        align=\"center\"\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {row.membership_type}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.country}</TableCell>\n                      <TableCell align=\"center\">{row.currency}</TableCell>\n                      <TableCell align=\"right\">\n                        {formatCurrency(row.annual_fee)}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {formatDate(row.from_date)}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {formatDate(row.to_date)}\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  )\n}\n","import Table from './Table'\n\nexport default Table\n","import React from 'react'\n\nconst SVG = ({\n  style = {\n    position: 'absolute',\n    right: '5px',\n    bottom: '15px',\n    paddingRight: '4px',\n    enableBackground: 'new 0 0 451 451',\n  },\n  fill = '#000',\n  width = '15px',\n  height = '20px',\n  className = '',\n  viewBox = '0 0 40 26',\n}) => (\n  <svg\n    version=\"1.1\"\n    id=\"Capa_1\"\n    // xmlns=\"http://www.w3.org/2000/svg\"\n    // xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    x=\"0px\"\n    y=\"0px\"\n    width={width}\n    height={height}\n    viewBox=\"0 0 451 451\"\n    style={style}\n    // xml:space=\"preserve\"\n  >\n    <g>\n      <path\n        d=\"M447.05,428l-109.6-109.6c29.4-33.8,47.2-77.9,47.2-126.1C384.65,86.2,298.35,0,192.35,0C86.25,0,0.05,86.3,0.05,192.3\n\t\ts86.3,192.3,192.3,192.3c48.2,0,92.3-17.8,126.1-47.2L428.05,447c2.6,2.6,6.1,4,9.5,4s6.9-1.3,9.5-4\n\t\tC452.25,441.8,452.25,433.2,447.05,428z M26.95,192.3c0-91.2,74.2-165.3,165.3-165.3c91.2,0,165.3,74.2,165.3,165.3\n\t\ts-74.1,165.4-165.3,165.4C101.15,357.7,26.95,283.5,26.95,192.3z\"\n      />\n    </g>\n  </svg>\n)\n\nexport default SVG\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './search.css'\nimport SearchSVG from './images/search'\n\nconst Search = ({ searchBy, searchText, handleSearch }) => (\n  <div className=\"searchBox\">\n    <input\n      type=\"text\"\n      placeholder={`${searchBy} Search`}\n      value={searchText}\n      onChange={(e) => handleSearch(e.target.value)}\n    />\n    <SearchSVG />\n  </div>\n)\n\nSearch.propTypes = {\n  searchBy: PropTypes.string,\n  searchText: PropTypes.string.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n}\n\nexport default Search\n","import React from 'react'\nimport { find, propEq } from 'ramda'\nimport { PropTypes } from 'prop-types'\nimport { Chip } from '@material-ui/core'\nimport { useListPageContext } from './context'\nimport './styles.css'\n\nconst getNewMembers = (chips, members) => {\n  if (!chips.length) return members\n  let newMembers = []\n  chips.forEach((currChip) => {\n    const member =\n      find(propEq(currChip.filterBy, currChip.code), members) ||\n      find(propEq(currChip.filterBy, currChip.filterText), members)\n    if (member) newMembers.push(member)\n  })\n  return newMembers\n}\n\nconst Toolbar = ({ members }) => {\n  const [data, dispatch] = useListPageContext()\n  const { chips = [] } = data\n\n  const toggleChips = (chip) => {\n    let newchips = chips\n    const index = newchips.findIndex((item) => chip.code === item.code)\n    if (index === -1) {\n      newchips.push(chip)\n    } else {\n      newchips.splice(index, 1)\n    }\n    dispatch({ type: 'update_chips', data: newchips })\n    dispatch({\n      type: 'update_members',\n      data: getNewMembers(newchips, members),\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <div>\n        <div className=\"toolbar\">\n          <div className=\"wrapper\">\n            {chips.map((chip) => (\n              <Chip\n                key={chip.code}\n                label={chip.filterText}\n                onDelete={() => {\n                  toggleChips(chip)\n                }}\n                className={'memberChip'}\n                color=\"primary\"\n              />              \n            ))}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nToolbar.propTypes = {\n  data: PropTypes.array,\n  toggleChips: PropTypes.func,\n}\n\nexport default Toolbar\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { find, propEq } from 'ramda'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { useListPageContext } from './context'\n\nconst styles = (theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n})\n\n// Update membership data by looking at chips\nconst calcuateFilteredData = (chips, members = []) => {\n  if (!chips.length) return members\n  return members.filter((member) =>\n    chips.every((currChip) =>\n      member[currChip.filterBy] === currChip.code || member[currChip.filterBy] === currChip.filterText\n    )\n  ) \n}\n\nconst SectionList = (props) => {\n  const {\n    classes,\n    filterFacets,\n    members,\n    setMembers,\n    filterBy,\n    isIchecked\n  } = props\n\n  const [state, setState] = useState({\n    checked: [0],\n  })\n  const [{ chips }, dispatch] = useListPageContext()\n\n  const toggleChips = (chip) => {\n    let newchips = chips\n    const index = newchips.findIndex((item) => chip.code === item.code)\n    if (index === -1) {\n      newchips.push(chip)\n    } else {\n      newchips.splice(index, 1)\n    }\n    dispatch({ type: 'update_chips', data: newchips })\n    dispatch({\n      type: 'update_members',\n      data: calcuateFilteredData(newchips, members),\n    })\n  }\n\n  const handleToggle = (item, filterBy) => () => {\n    const { checked } = state\n    const index = checked.indexOf(item.code)\n    const newChecked = [...checked]\n\n    if (index === -1) {\n      newChecked.push(item.code)\n    } else {\n      newChecked.splice(index, 1)\n    }\n\n    setState({\n      checked: newChecked,\n    })\n\n    toggleChips({\n      filterBy: filterBy,\n      filterText: item.description,\n      code: item.code,\n    })\n  }\n\n  return (\n    <List className={classes.root}>\n      {filterFacets.map((item) => (\n        <ListItem\n          key={`#${item.code}`}\n          dense\n          button\n          onClick={handleToggle(item, filterBy)}\n        >\n          <Checkbox\n            checked={isIchecked(item.description)}\n            tabIndex={-1}\n            disableRipple\n          />\n          <ListItemText primary={`(${item.code}) ${item.description}`} />\n        </ListItem>\n      ))}\n    </List>\n  )\n}\n\nSectionList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  filterFacets: PropTypes.array,\n  searchText: PropTypes.string,\n  filterBy: PropTypes.string,\n  toggleChips: PropTypes.func,\n  isIchecked: PropTypes.func,\n}\n\nexport default withStyles(styles)(SectionList)\n// <List style={Object.assign({}, Style.SectionList)}>\n//   {props.filterFacets.map((item, index) => {\n//     if (\n//       item.description\n//         .toLowerCase()\n//         .indexOf(props.searchText.toLowerCase()) !== -1\n//     ) {\n//       return (\n//         <ListItem\n//           style={{ fontSize: 12 }}\n//           key={index}\n//           leftCheckbox={\n//             <Checkbox\n//               onCheck={event => {\n//                 props.toggleChips(\n//                   item.code,\n//                   item.description,\n//                   props.filterBy\n//                 );\n//               }}\n//               defaultChecked={props.isIchecked(item.description)}\n//             />\n//           }\n//           primaryText={item}\n//         />\n//       );\n//     } else {\n//       return <div>{item}</div>;\n//     }\n//   })}\n// </List>\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24 24H0V0h24v24z\",\n  fill: \"none\"\n});\n\nfunction SvgLeftBig(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLeftBig);\nexport default __webpack_public_path__ + \"static/media/left_big.b6a1d57b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  fill: \"none\"\n});\n\nfunction SvgRightBig(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRightBig);\nexport default __webpack_public_path__ + \"static/media/right_big.c126d230.svg\";\nexport { ForwardRef as ReactComponent };","import faker from 'faker'\nimport { find, prop, propEq, uniqBy } from 'ramda'\n\nexport const generateData = () => {\n  let rows = []\n  for (var i = 0; i < 10; i++) {\n    rows.push({\n      id: i,\n      name: faker.name.findName(),\n      country: faker.address.country(),\n      currency: faker.finance.currencySymbol(),\n      annual_fee: faker.finance.amount(),\n      from_date: `${faker.date.past()}`,\n      to_date: `${faker.date.future()}`,\n      membership_type: 'Basic',\n    })\n  }\n  let currenciesReference = []\n  let countriesReference = []\n\n  const membershipTypesReference = [{ code: 'B', description: 'Basic' }]\n\n  const chipData = [\n    { filterBy: 'membership_type', filterText: 'Basic', code: 'B' },\n  ]\n\n  rows.forEach((row) => {\n    if (!find(propEq('code', row.currency))(currenciesReference))\n      currenciesReference.push({\n        code: row.currency,\n        description: row.currency,\n      })\n    if (!find(propEq('code', row.country))(countriesReference))\n      countriesReference.push({\n        code: row.country,\n        description: row.country,\n      })\n  })\n\n  return [\n    uniqBy(prop('id'), rows),\n    countriesReference,\n    currenciesReference,\n    membershipTypesReference,\n    chipData,\n  ]\n}\n","import React, { useState } from 'react'\nimport Divider from '@material-ui/core/Divider'\nimport Memberships from './Memberships'\nimport FilterTable from '../Components/FilterTable'\nimport Search from './Search'\nimport Toolbar from './Chips'\nimport SubList from './SubList'\nimport { StateProvider } from './context/index'\nimport { ReactComponent as LeftArrow } from './images/left_big.svg'\nimport { ReactComponent as RightArrow } from './images/right_big.svg'\nimport { generateData } from './context/mockData'\nimport { capitalize } from '../utils/string'\n\n// randomly generated data\n// contains a list of objects in format: {code: String, description: String}\nconst [\n  rows,\n  countriesReference,\n  currenciesReference,\n  membershipTypesReference,\n  initialChipData,\n] = generateData()\n\nconst ListPage = (props) => {\n  const [members, setMembers] = useState(rows)\n  const [chipData, setChipData] = useState(initialChipData)\n  const [countryFilterData, setCountryFilterData] = useState(countriesReference)\n  const [currencyFilterData, setCurrencyFilterData] = useState(currenciesReference)\n\n  const [searchTextCountries, setSearchTextCountries] = useState('')\n  const [searchTextCurrencies, setSearchTextCurrencies] = useState('')\n  const [searchTextMemberships, setSearchTextMemberships] = useState('')\n  const [open, setOpen] = useState(false)\n  const [sideWidth, setSideWidth] = useState('16.66%')\n  const [mainWidth, setMinWidth] = useState('83.33%')\n  const [rightIconVisibility, setIconVisibility] = useState('hidden')\n  const [mainDisplay, setMainDisplay] = useState('inherit')\n\n  const handleToggle = () => {\n    setOpen(!open)\n    setSideWidth(sideWidth === '16.66%' ? '3%' : '16.66%')\n    setMinWidth(mainWidth === '83.33%' ? '97%' : '83.33%')\n    setMainDisplay(mainDisplay === 'none' ? 'inherit' : 'none')\n    setIconVisibility(rightIconVisibility === 'hidden' ? 'visible' : 'hidden')\n  }\n\n  const isIchecked = (description) => {\n    const index = chipData.map((chip) => chip.filterText).indexOf(description)\n    return index === -1 ? false : true\n  }\n\n  const handleSearchCountries = (text) => {\n    setSearchTextCountries(text)\n    setCountryFilterData(countriesReference.filter(country => country.description.includes(capitalize(text))))\n  }\n\n  const handleSearchCurrencies = (text) => {\n    setSearchTextCurrencies(text)\n    setCurrencyFilterData(currenciesReference.filter(curr => curr.description.includes(text)))\n  }\n\n  const handleSearchMemberships = (text) => {\n    setSearchTextMemberships(text)\n  }\n\n  return (\n    <StateProvider initialState={{ chips: initialChipData, members: rows }}>\n      {\n        <div className=\"col-1-1 mainContent\">\n          <div\n            className=\"col-2-12\"\n            style={{\n              width: sideWidth,\n              overflowY: 'scroll',\n              maxHeight: '800px',\n              padding: '10px',\n              background: '#fff'\n            }}\n          >\n            <div style={Object.assign({}, { display: mainDisplay })}>\n              <div className=\"sidebarHeader\">\n                <div\n                  style={\n                    {\n                      float: 'left',\n                      padding: 5,\n                      width: '50%',\n                      textAlign: 'left',\n                    }\n                  }\n                >\n                  Filters\n                </div>\n                <div\n                  style={\n                    {\n                      float: 'right',\n                      padding: 5,\n                      width: '50%',\n                      textAlign: 'right',\n                    }\n                  }\n                >\n                  <LeftArrow onClick={handleToggle} alt=\"left\" />\n                </div>\n              </div>\n              <Divider />\n              <div>\n                <Search\n                  handleSearch={handleSearchCountries}\n                  searchText={searchTextCountries}\n                  searchBy={'Country'}\n                />\n                <SubList\n                  filterFacets={countryFilterData}\n                  members={members}\n                  setMembers={setMembers}\n                  filterBy={'country'}\n                  searchText={searchTextCountries}\n                  isIchecked={isIchecked}\n                />\n              </div>\n              <Divider />\n              <div>\n                <Search\n                  handleSearch={handleSearchCurrencies}\n                  searchText={searchTextCurrencies}\n                  searchBy={'Currency'}\n                />\n                <SubList\n                  filterFacets={currencyFilterData}\n                  members={members}\n                  setMembers={setMembers}\n                  filterBy={'currency'}\n                  searchText={searchTextCurrencies}\n                  isIchecked={isIchecked}\n                />\n              </div>\n              <Divider />\n              <div>\n                <Search\n                  handleSearch={handleSearchMemberships}\n                  searchText={searchTextMemberships}\n                  searchBy={'Membership Type'}\n                />\n                <SubList\n                  filterFacets={membershipTypesReference}\n                  members={members}\n                  setMembers={setMembers}\n                  filterBy={'membership_type'}\n                  searchText={searchTextMemberships}\n                  isIchecked={isIchecked}\n                />\n              </div>\n            </div>\n            <div style={Object.assign({}, { visibility: rightIconVisibility })}>\n              <h3 />\n              <RightArrow\n                style={Object.assign({}, { float: 'right' })}\n                onClick={handleToggle}\n                alt=\"right\"\n              />\n            </div>\n          </div>\n          <div\n            className=\"col-10-12\"\n            style={{\n              width: mainWidth,\n              position: 'relative',\n              overflowY: 'scroll',\n              maxHeight: '800px',\n              padding: '5px',\n              background: '#fff'\n            }}\n          >\n            <Toolbar members={members} />\n            <FilterTable />\n          </div>\n        </div>\n      }\n      <Memberships\n        countriesReference={countriesReference}\n        currenciesReference={currenciesReference}\n        membershipTypesReference={membershipTypesReference}\n      />\n    </StateProvider>\n  )\n}\n\nexport default ListPage\n","import ListPage from './ListPage'\n\nexport default ListPage\n","import React, { useState, useEffect } from 'react'\nimport { Table, Icon, Segment, Grid } from 'semantic-ui-react'\nimport './styles.css'\n\nconst tempData = [\n  {\n    type: 'Onboard Contractor',\n    status: 'Pending',\n    tasks: '2 of 4',\n    date: '2014-04-18',\n    name1: 'Create Zendesk Ticket',\n    name2: 'LDAP Access',\n    percent: 50,\n  },\n  {\n    type: 'Onboard Employee',\n    status: 'Done',\n    tasks: '1 of 3',\n    date: '2014-04-21',\n    name1: 'Equipment Setup',\n    name2: 'Microsoft Training',\n    percent: 100,\n  },\n  {\n    type: 'Onboard Contractor',\n    status: 'Error',\n    tasks: '3 of 3',\n    date: '2014-08-09',\n    name1: 'Create Zendesk Ticket',\n    name2: 'LDAP Access',\n    percent: 25,\n  },\n  {\n    type: 'Terminate Contractor',\n    status: 'Done',\n    tasks: '2 of 4',\n    date: '2014-04-24',\n    name1: 'Create Zendesk Ticket',\n    name2: 'LDAP Access',\n    percent: 100,\n  },\n  {\n    type: 'Terminate Contractor',\n    status: 'Pending',\n    tasks: '1 of 4',\n    date: '2014-04-26',\n    name1: 'Create Zendesk Ticket',\n    name2: 'LDAP Access',\n    percent: 90,\n  },\n]\n\nconst renderGridSubColumns = (item, index) => {\n  let taskName = item.name1\n  if (index > 1) taskName = item.name2\n  return (\n    <Grid columns={4}>\n      <Grid.Column>\n        <span>\n          {index}: {taskName}\n        </span>\n      </Grid.Column>\n      <Grid.Column>\n        <span>Status: {item.status}</span>\n      </Grid.Column>\n      <Grid.Column>\n        <span>Percent Complete: {item.percent}</span>\n      </Grid.Column>\n      <Grid.Column>\n        <span>\n          <button>Update</button>\n        </span>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nconst ExapndableTable = () => {\n  const [expandedRows, setExpanded] = useState([])\n  const [allItemRows, setData] = useState([])\n\n  useEffect(() => {\n    const handleRowClick = (rowId) => {\n      const currentExpandedRows = expandedRows\n      const isRowCurrentlyExpanded = currentExpandedRows.includes(rowId)\n\n      const newExpandedRows = isRowCurrentlyExpanded\n        ? currentExpandedRows.filter((id) => id !== rowId)\n        : currentExpandedRows.concat(rowId)\n\n      setExpanded(newExpandedRows)\n    }\n\n    // const renderItemCaret = (rowId) => {\n    //   const currentExpandedRows = expandedRows\n    //   const isRowCurrentlyExpanded = currentExpandedRows.includes(rowId);\n\n    //   if (isRowCurrentlyExpanded) {\n    //     return <Icon name=\"caret down\" />;\n    //   } else {\n    //     return <Icon name=\"caret right\" />;\n    //   }\n    // }\n\n    const renderItem = (item, index) => {\n      const itemRows = [\n        <Table.Row\n          onClick={() => handleRowClick(index)}\n          key={'row-data-' + index}\n        >\n          {/* <Table.Cell>{renderItemCaret(index)}</Table.Cell> */}\n          <Table.Cell>{item.type}</Table.Cell>\n          <Table.Cell>{item.status}</Table.Cell>\n          <Table.Cell>{item.date}</Table.Cell>\n          <Table.Cell>{item.tasks}</Table.Cell>\n        </Table.Row>,\n      ]\n\n      if (expandedRows.includes(index)) {\n        itemRows.push(\n          <Table.Row key={'row-expanded-' + index}>\n            <Table.Cell colSpan=\"5\">{renderItemDetails(item)}</Table.Cell>\n          </Table.Row>\n        )\n      }\n\n      return itemRows\n    }\n    let allItemRows = []\n    tempData.forEach((item, index) => {\n      const perItemRows = renderItem(item, index)\n      allItemRows = allItemRows.concat(perItemRows)\n    })\n    setData(allItemRows)\n  }, [expandedRows])\n\n  const renderItemDetails = (item) => (\n    <Segment basic>\n      <h2>2 Active Tasks</h2>\n      {renderGridSubColumns(item, 1)}\n      {renderGridSubColumns(item, 2)}\n    </Segment>\n  )\n\n  return (\n    <Table selectable>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Activity Type</Table.HeaderCell>\n          <Table.HeaderCell>Overall Status</Table.HeaderCell>\n          <Table.HeaderCell>Date Created</Table.HeaderCell>\n          <Table.HeaderCell>Tasks Completed</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>{allItemRows}</Table.Body>\n    </Table>\n  )\n}\n\nexport default ExapndableTable\n","import Table from './Table'\n\nexport default Table\n","import NavBar from './NavBar'\n\nexport default NavBar\n","import React, { useEffect } from 'react'\nimport { AppBar, Toolbar } from '@material-ui/core'\nimport './styles.css'\n\nconst NavBar = () => {\n  const handleHomeClickResponsive = () => {\n    var x = document.getElementById('myTopnav')\n    if (x.className === 'topnav') {\n      x.className += ' responsive'\n    } else {\n      x.className = 'topnav'\n    }\n  }\n\n  useEffect(() => {\n    const pages = ['/', '/stocks', '/filter_table', '/expand_table']\n    var curPage = document.URL\n    curPage = curPage.substr(curPage.lastIndexOf('/'))\n    const routeIndex = pages.indexOf(curPage)\n  \n    // Applies color based on current page\n    const links = document.getElementById('myTopnav').children\n    links[routeIndex] && links[routeIndex].classList.add('current-link')\n  }, [])\n\n  return (\n    <AppBar position=\"static\" color=\"default\" elevation={0} className=\"appBar\">\n      <Toolbar>\n        <div className=\"topnav\" id=\"myTopnav\">\n          <a href={'/dashboard'}>Dashboard</a>\n          <a href={'/dashboard/stocks'}>Stock Symbol Tracker</a>\n          <a href={'/dashboard/filter_table'}>Filterable Table</a>\n          <a href={'/dashboard/expand_table'}>Expandable Table</a>\n          <a href={'#'} className=\"icon\" onClick={handleHomeClickResponsive}>\n            <i className=\"fa fa-bars\"></i>\n          </a>\n        </div>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default NavBar\n","export default __webpack_public_path__ + \"static/media/chart.f22b8185.jpg\";","export default __webpack_public_path__ + \"static/media/list_table.4fe82166.png\";","export default __webpack_public_path__ + \"static/media/expand_table.5913f09d.png\";","import React from 'react'\nimport { Link, Route } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport StcokFetcher from './StockFetcher'\nimport ListPage from './ListPage'\nimport Table from './Components/ExpandableTable'\nimport NavBar from './Components/NavBar'\n\nimport './App.css'\nimport chart from './images/chart.jpg'\nimport listImg from './images/list_table.png'\nimport expandImg from './images/expand_table.png'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <a target=\"_blank\" href=\"https://aldizh.github.io/dashboard\">\n        Dashboard&nbsp;\n      </a>\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    position: 'relative',\n    textAlign: 'center',\n    // backgroundImage: 'url(./images/background.jpg)',\n    // backgroundRepeat: 'no-repeat',\n    minHeight: '100vh',\n    fontSize: 'calc(10px + 2vmin)'\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    // backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardActions: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    // backgroundColor: theme.palette.background.paper,\n    // padding: theme.spacing(6),\n  },\n}))\n\nconst Album = (props) => {\n  const classes = useStyles()\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div className={classes.app}>\n        <Route\n          exact={true}\n          path=\"/\"\n          render={() => (\n            <>\n              <NavBar />\n              <main>\n                {/* Hero unit */}\n                <div className={classes.heroContent}>\n                  <Container maxWidth=\"sm\">\n                    <Typography\n                      variant=\"h4\"\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      gutterBottom\n                    >\n                      Sample React Projects\n                    </Typography>\n                    <Typography\n                      variant=\"h5\"\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      paragraph\n                    >\n                      These are just a few projects to showcase the\n                      versatility of react when it comes to building slick and\n                      efficient UI components.\n                    </Typography>\n                    {/* <div className={classes.heroButtons}>\n                    <Grid container spacing={2} justify=\"center\">\n                      <Grid item>\n                        <Button variant=\"outlined\" color=\"primary\">\n                          <Link to={'/'}>Profile</Link>\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </div> */}\n                  </Container>\n                </div>\n                <Container className={classes.cardGrid} maxWidth=\"md\">\n                  {/* End hero unit */}\n                  <Grid container spacing={4}>\n                    <Grid item key={1} xs={12} sm={6} md={4}>\n                      <Card className={classes.card}>\n                        <CardMedia\n                          className={classes.cardMedia}\n                          image={expandImg}\n                          title=\"Expandable Table\"\n                        />\n                        <CardContent className={classes.cardContent}>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Expandable Table\n                          </Typography>\n                          <Typography>\n                            Nice exapndable table to show more row specific\n                            info.\n                          </Typography>\n                        </CardContent>\n                        <CardActions className={classes.cardActions}>\n                          <Button size=\"small\" color=\"primary\">\n                            <Link to={'/expand_table'}>View</Link>\n                          </Button>\n                        </CardActions>\n                      </Card>\n                    </Grid>\n                    <Grid item key={2} xs={12} sm={6} md={4}>\n                      <Card className={classes.card}>\n                        <CardMedia\n                          className={classes.cardMedia}\n                          image={chart}\n                          title=\"Chart\"\n                        />\n                        <CardContent className={classes.cardContent}>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Stock Tracker\n                          </Typography>\n                          <Typography>\n                            Compare any ticker symbol against the S&P benchmark\n                            to get stock&apos performance.\n                          </Typography>\n                        </CardContent>\n                        <CardActions className={classes.cardActions}>\n                          <Button size=\"small\" color=\"primary\">\n                            <Link to={'/stocks'}>View</Link>\n                          </Button>\n                        </CardActions>\n                      </Card>\n                    </Grid>\n                    <Grid item key={3} xs={12} sm={6} md={4}>\n                      <Card className={classes.card}>\n                        <CardMedia\n                          className={classes.cardMedia}\n                          image={listImg}\n                          title=\"Filterable Table\"\n                        />\n                        <CardContent className={classes.cardContent}>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Filterable List\n                          </Typography>\n                          <Typography>\n                            List page with filter and pagination capabilities\n                          </Typography>\n                        </CardContent>\n                        <CardActions className={classes.cardActions}>\n                          <Button size=\"small\" color=\"primary\">\n                            <Link to={'/filter_table'}>View</Link>\n                          </Button>\n                        </CardActions>\n                      </Card>\n                    </Grid>\n                  </Grid>\n                </Container>\n              {props.children}\n              </main>\n              {/* Footer */}\n              <footer className={classes.footer}>\n                <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                  Thank you for visiting\n                </Typography>\n                <Typography variant=\"subtitle1\" align=\"center\" color=\"textPrimary\" component=\"p\">\n                  Feel free to check out my&nbsp;\n                  <a target=\"_blank\" href=\"https://aldizhupani.medium.com/\">medium</a>{' blog'}\n                </Typography>\n                <Copyright />\n              </footer>\n              {/* End footer */}\n            </>\n          )}\n        />\n        <Route\n          exact\n          path=\"/stocks\"\n          render={() => (\n            <React.Fragment>\n              <NavBar />\n              <main>\n                <div className={classes.heroContent}>\n                  <StcokFetcher />\n                  {props.children}\n                </div>\n              </main>\n            </React.Fragment>\n          )}\n        />\n        <Route\n          exact\n          path=\"/expand_table\"\n          render={() => (\n            <React.Fragment>\n              <NavBar />\n              <main>\n                <div className={classes.heroContent}>\n                  <Table />\n                  {props.children}\n                </div>\n              </main>\n            </React.Fragment>\n          )}\n        />\n        <Route\n          exact\n          path=\"/filter_table\"\n          render={() => (\n            <React.Fragment>\n              <NavBar />\n              <main>\n                <div className={classes.heroContent}>\n                  <ListPage />\n                  {props.children}\n                </div>\n              </main>\n            </React.Fragment>\n          )}\n        />\n      </div>\n    </React.Fragment>\n  )\n}\n\n\nexport default Album","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport ParticlesBg from \"particles-bg\";\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App>\n        <ParticlesBg type=\"circle\" bg={true} />\n      </App>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}