{"version":3,"sources":["StockFetcher/Canvas.js","hooks/useData.js","StockFetcher/Fetcher.js","StockFetcher/index.js","Components/ExpandableTable/Table.js","Components/ExpandableTable/index.js","ListPage/context/reducer.js","ListPage/context/index.js","ListPage/Memberships.js","Components/FilterTable/config.js","Components/FilterTable/Head.js","Components/FilterTable/utils.js","utils/string.js","Components/FilterTable/Table.js","Components/FilterTable/index.js","ListPage/images/search.js","ListPage/Search.js","ListPage/Chips.js","ListPage/SubList.js","ListPage/images/left_big.svg","ListPage/images/right_big.svg","ListPage/index.js","ListPage/ListPage.js","ListPage/context/mockData.js","Components/NavBar/index.js","Components/NavBar/NavBar.js","images/chart.jpg","images/list_table.png","images/expand_table.png","App.js","serviceWorker.js","index.js"],"names":["INTERVAL_KEY","defaultApiData","getBaseWeightedPrice","price","startingPrice","Number","getXData","res","Object","keys","getYData","values","Canvas","state","dataPoints","spyDataPoints","earliestDataPoint","latestDataPoint","earliestSPYDataPoint","latestSPYDataPoint","this","props","data","spyData","timeIntervalKeys","timeIntervalValues","lastIndex","length","i","push","x","Date","y","spyTimeIntervalKeys","spyTimeIntervalValues","setState","chart","render","search","symbol","times","lastUpdate","options","theme","animationEnabled","title","text","axisY","prefix","axisX","interVal","interValType","labelFormatter","e","CanvasJS","formatDate","value","toolTip","shared","type","name","showInLegend","xValueType","xValueFormatString","yValueFormatString","navigator","slider","minimum","maximum","spyGrowth","parseFloat","toFixed","stockGrowth","Card","variant","style","margin","width","CardContent","Typography","gutterBottom","containerProps","height","onRef","ref","React","Component","dataFetchReducer","action","isLoading","isError","payload","Error","useDataApi","seriesType","initialUrl","initialData","useState","url","setUrl","useReducer","dispatch","useEffect","a","axios","result","Note","extendedData","split","rows","slice","extendedByDate","map","row","time","substring","rowData","fetchData","doFetch","API_KEY","initialTimeSeriesData","Symbol","initialFundamentals","Name","Exchange","Sector","MarketCapitalization","getSeriesUrl","final","getFundamentalsUrl","Fetcher","setSymbol","setSearch","setSeriesType","apiError","setApiError","fundamentalsData","fundamentalsIsLoading","fundamentalsIsError","fundamentalsFoFetch","newApiError","Boolean","onSubmit","event","preventDefault","onChange","target","padding","fontSize","onClick","color","toString","replace","tempData","status","tasks","date","name1","name2","percent","renderGridSubColumns","item","index","taskName","columns","Column","Table","expandedRows","setExpanded","allItemRows","setData","renderItem","itemRows","Row","rowId","currentExpandedRows","newExpandedRows","includes","filter","id","concat","handleRowClick","Cell","colSpan","renderItemDetails","forEach","perItemRows","Segment","basic","selectable","Header","HeaderCell","Body","chips","members","StateContext","createContext","StateProvider","initialState","children","Provider","listPageContext","useListPageContext","useContext","useStyles","makeStyles","root","spacing","MemberSetup","setName","annual_fee","setFee","code","membership_type","setType","country","setCountry","currency","setCurrency","from_date","setFromDate","countriesReference","currenciesReference","membershipTypesReference","handleFormChange","find","propEq","classes","className","noValidate","autoComplete","Grid","container","justify","FormControl","InputLabel","htmlFor","Input","Select","labelId","option","MenuItem","description","disabled","TextField","label","InputLabelProps","shrink","Button","updatedMembers","to_date","headCells","numeric","disablePadding","Head","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","dateVal","toLocaleDateString","weekday","year","month","day","descendingComparator","b","stableSort","array","comparator","getComparator","stabilizedThis","el","sort","newOrder","formatCurrency","currencyStyle","Intl","NumberFormat","format","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","primary","dark","flex","EnhancedTableToolbar","selected","setSelected","clsx","component","Tooltip","IconButton","aria-label","updated","paper","marginBottom","table","minWidth","border","clip","overflow","position","top","setOrder","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","Paper","TableContainer","aria-labelledby","size","newSelecteds","n","TableBody","isItemSelected","indexOf","hover","selectedIndex","newSelected","handleClick","role","aria-checked","tabIndex","scope","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","SVG","right","bottom","enableBackground","fill","viewBox","version","d","Search","searchBy","searchText","handleSearch","placeholder","getNewMembers","newMembers","currChip","member","filterBy","filterText","Toolbar","Fragment","chip","Chip","onDelete","newchips","findIndex","splice","toggleChips","calcuateFilteredData","withStyles","maxWidth","background","filterFacets","isIchecked","handleToggle","newChecked","List","ListItem","button","disableRipple","ListItemText","_extends","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","_ref3","SvgLeftBig","_ref","svgRef","titleId","xmlns","ForwardRef","SvgRightBig","ListPage","faker","findName","address","finance","currencySymbol","random","number","past","future","uniqBy","prop","generateData","initialChipData","chipData","searchTextCountries","setSearchTextCountries","searchTextCurrencies","setSearchTextCurrencies","searchTextMemberships","setSearchTextMemberships","open","setOpen","sideWidth","setSideWidth","mainWidth","setMinWidth","rightIconVisibility","setIconVisibility","mainDisplay","setMainDisplay","overflowY","maxHeight","display","float","textAlign","alt","Divider","SubList","visibility","FilterTable","Memberships","NavBar","curPage","document","URL","substr","lastIndexOf","routeIndex","links","getElementById","classList","add","AppBar","elevation","href","Copyright","getFullYear","app","minHeight","icon","marginRight","heroContent","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardActions","justifyContent","cardContent","flexGrow","footer","Album","CssBaseline","exact","path","Container","paragraph","xs","sm","md","CardMedia","image","expandImg","CardActions","to","listImg","window","location","hostname","match","ReactDOM","StrictMode","basename","process","bg","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9afb3b32.chunk.js","sourcesContent":["/* App.js */\nimport React from 'react'\nimport { CanvasJS, CanvasJSChart } from 'canvasjs-react-charts'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\n\nconst INTERVAL_KEY = 'Time Series (15min)'\nconst defaultApiData = { INTERVAL_KEY: {} }\n\n// Get price calculation based on initial investment ($100 for simplicity)\nconst getBaseWeightedPrice = (price, startingPrice) =>\n  Number((100 / startingPrice) * price)\n\n// Get x axis data (simple date or datetime)\nconst getXData = (res) => {\n  if (!res[INTERVAL_KEY]) return ['2021-01-01']\n  return Object.keys(res[INTERVAL_KEY])\n}\n\n// Get y axis data (price corresponding to it)\nconst getYData = (res) => {\n  if (!res[INTERVAL_KEY]) return [{ '4.close': 0.0 }]\n  return Object.values(res[INTERVAL_KEY])\n}\n\nclass Canvas extends React.Component {\n  state = {\n    dataPoints: [],\n    spyDataPoints: [],\n    earliestDataPoint: 0,\n    latestDataPoint: 0,\n    earliestSPYDataPoint: 0,\n    latestSPYDataPoint: 0\n  }\n\n  componentDidMount() {\n    const { data = defaultApiData, spyData } = this.props\n    const dataPoints = []\n    const timeIntervalKeys = getXData(data) // date strings in reverse order\n    const timeIntervalValues = getYData(data)\n    const lastIndex = timeIntervalKeys.length - 1\n    const earliestDataPoint = timeIntervalValues[lastIndex]\n      ? timeIntervalValues[lastIndex]['4. close']\n      : 0\n    const latestDataPoint = timeIntervalValues[0]\n      ? timeIntervalValues[0]['4. close']\n      : 0\n\n    for (var i = lastIndex; i > 0; i--) {\n      dataPoints.push({\n        x: new Date(timeIntervalKeys[i]),\n        y: getBaseWeightedPrice(\n          timeIntervalValues[i]['4. close'],\n          earliestDataPoint\n        ),\n      })\n    }\n\n    const spyDataPoints = []\n    const spyTimeIntervalKeys = getXData(spyData) // date strings in reverse order\n    const spyTimeIntervalValues = getYData(spyData)\n    const earliestSPYDataPoint = spyTimeIntervalValues[lastIndex]\n      ? spyTimeIntervalValues[lastIndex]['4. close']\n      : 0\n    const latestSPYDataPoint = spyTimeIntervalValues[0]\n      ? spyTimeIntervalValues[0]['4. close']\n      : 0\n    for (var i = lastIndex; i > 0; i--) {\n      spyDataPoints.push({\n        x: new Date(spyTimeIntervalKeys[i]),\n        y: getBaseWeightedPrice(\n          spyTimeIntervalValues[i]['4. close'],\n          earliestSPYDataPoint\n        ),\n      })\n    }\n    this.setState({\n      dataPoints,\n      spyDataPoints,\n      earliestDataPoint,\n      latestDataPoint,\n      earliestSPYDataPoint,\n      latestSPYDataPoint\n    })\n\n    this.chart.render()\n  }\n\n  componentWillUnmount() {\n    this.chart = null\n  }\n\n  // Get data points for the given ticker and the benchmark (SPY)\n  render() {\n    const { data, search, symbol } = this.props\n    const { \n      earliestDataPoint,\n      latestDataPoint,\n      earliestSPYDataPoint,\n      latestSPYDataPoint\n    } = this.state\n    const times = getXData(data)\n    const lastUpdate = data[\"Meta Data\"] && data[\"Meta Data\"][\"3. Last Refreshed\"]\n    const options = {\n      theme: 'light2',\n      animationEnabled: true,\n      title: {\n        text: `Historical Price Comparison: ${search} vs SPY`,\n      },\n      axisY: {\n        title: 'Price (weighted to 100$)',\n        prefix: '$',\n      },\n      axisX: {\n        title: 'Day',\n        interVal: 1,\n        interValType: 'day',\n        labelFormatter: function (e) {\n          return CanvasJS.formatDate(e.value, 'DD MMM')\n        },\n      },\n      toolTip: {\n        shared: true,\n      },\n      data: [\n        {\n          type: 'spline',\n          name: `${search}`,\n          showInLegend: true,\n          xValueType: 'dateTime',\n          xValueFormatString: 'DD MMM YYYY',\n          yValueFormatString: '$##.00',\n          dataPoints: this.state.dataPoints,\n        },\n        {\n          type: 'spline',\n          name: 'SPY',\n          showInLegend: true,\n          xValueType: 'dateTime',\n          xValueFormatString: 'DD MMM YYYY',\n          yValueFormatString: '$##.00',\n          dataPoints: this.state.spyDataPoints,\n        },\n      ],\n      navigator: {\n        slider: {\n          minimum: new Date(times[0]),\n          maximum: new Date(times[times.length - 1]),\n        },\n      },\n    }\n\n    const containerProps = {\n      width: '100%',\n      height: '450px',\n      margin: 'auto',\n    }\n\n    const metricsContainer = {\n      \"background-color\": \"#f9b79f\"\n    }\n\n    const spyGrowth = parseFloat((latestSPYDataPoint-earliestSPYDataPoint)/earliestSPYDataPoint * 100).toFixed(2)\n    const stockGrowth = parseFloat((latestDataPoint-earliestDataPoint)/earliestDataPoint * 100).toFixed(2)\n\n    return (\n      <>\n        <Card variant=\"outlined\"\n          style={{\n            margin: \"10px auto\",\n            width: \"70%\"\n        }}>\n          <CardContent>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              SPY Growth: {spyGrowth}%\n            </Typography>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              {search} Growth: {stockGrowth}%\n            </Typography>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Last Updated: {lastUpdate}\n            </Typography>\n          </CardContent>\n        </Card>\n        <div>\n          <CanvasJSChart\n            containerProps={containerProps}\n            options={options}\n            onRef={(ref) => (this.chart = ref)}\n          />\n          {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Canvas\n","import React, { useState, useEffect, useReducer } from 'react'\nimport axios from 'axios'\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      }\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      }\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      }\n    default:\n      throw new Error()\n  }\n}\n\nconst useDataApi = (symbol, seriesType, initialUrl, initialData = {}) => {\n  const [url, setUrl] = useState(initialUrl)\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData,\n  })\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' })\n      try {\n        const defaultRes = {\n          data: {\n            'Meta Data': {\n              \"1. Information\": \"Intraday (15min) open, high, low, close prices and volume\",\n              \"2. Symbol\": symbol,\n              \"3. Last Refreshed\": \"2021-12-02 20:00:00\"\n            },\n            'Time Series (15min)': {\n              \"2021-10-22 04:15:00\": {\n                \"1. open\": 70.1025,\n                \"2. high\": 73.1825,\n                \"3. low\": 69.1825,\n                \"4. close\": 71.0543,\n                \"5. volume\": 101\n              }\n            }\n          }\n        }\n        const result = await axios(url)\n        \n        // This means we hit the daily threshold of 5 calls per minute\n        if (result.data.Note) dispatch({ type: 'FETCH_FAILURE' })\n        \n        if (seriesType === \"TIME_SERIES_INTRADAY_EXTENDED\") {\n          // Parse csv result here\n          const extendedData = result.data.split(\"\\r\\n\")\n          const rows = extendedData.slice(1)\n          let extendedByDate = {}\n\n          // iterate through these\n          rows.map((row) => {\n            const time = row.substring(0, 19)\n            const rowData = row.substring(20)\n            const dataPoints = rowData.split(\",\")\n            if (rowData) extendedByDate[time] = {\n              \"1. open\": dataPoints[0],\n              \"2. high\": dataPoints[1],\n              \"3. low\":  dataPoints[2],\n              \"4. close\": dataPoints[3],\n              \"5. volume\": dataPoints[4]\n            }\n          })\n          dispatch({ type: 'FETCH_SUCCESS', payload: {\n            data: {\n              'Meta Data': { \n                \"1. Information\": \"Intraday (15min) open, high, low, close prices and volume\",\n                \"2. Symbol\": symbol,\n                \"3. Last Refreshed\": \"2021-12-02 20:00:00\"\n               },\n              'Time Series (15min)': extendedByDate\n            }\n          } })\n        }\n\n        else {\n          dispatch({ type: 'FETCH_SUCCESS', payload: result })\n        }\n      } catch (error) {\n        dispatch({ type: 'FETCH_FAILURE' })\n      }\n    }\n\n    if (symbol) fetchData()\n  }, [symbol, seriesType, url])\n\n  const doFetch = (url) => setUrl(url)\n\n  return { ...state, doFetch }\n}\n\nexport default useDataApi\n","// Documentation for canvas js: https://canvasjs.com/docs\n// Documentationf for alpha advantage: https://www.alphavantage.co/documentation/\n\nimport React, { Fragment, useState, useEffect } from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Canvas from './Canvas'\nimport useDataApi from 'hooks/useData'\n\nconst API_KEY = '1PXX8A1J2QJQFTBP'\nconst TICKER = 'JPM'\nconst interval = '15min' // time interval between two consecutive data points\nconst outputSize = 'full' // number of data points\nconst overView = 'OVERVIEW' // type of query\n\n// helpers\nconst isExtended = (type) => type === \"TIME_SERIES_INTRADAY_EXTENDED\"\n\n// regex to look for any point in the string that has a multiple of 3 digits in a row after it,\nexport const numberWithCommas = (x) => {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nconst initialTimeSeriesData = {\n  data: { 'Meta Data': { Symbol: \"SPY\" }, 'Time Series (15min)': {} },\n}\nconst initialFundamentals = {\n  data: { Name: '', Exchange: '', Sector: '', MarketCapitalization: '' },\n}\n\nconst getSeriesUrl = (symbol, seriesType) => {\n  // TO DO: Extend this to include multiple months\n  // Maybe surface it via the UI?\n  const slice = \"year1month1\"\n  const baseUrl = 'https://www.alphavantage.co/query'\n  let final = `${baseUrl}?function=${seriesType}&symbol=${symbol}&interval=${interval}&outputsize=${outputSize}&apikey=${API_KEY}&adjusted=true`\n  if (isExtended(seriesType)) final += `&slice=${slice}`\n  return final\n}\n\nconst getFundamentalsUrl = (symbol) => {\n  const baseUrl = 'https://www.alphavantage.co/query'\n  return `${baseUrl}?function=${overView}&symbol=${symbol}&apikey=${API_KEY}`\n}\n\nfunction Fetcher() {\n  const [symbol, setSymbol] = useState(TICKER) // set on type\n  const [search, setSearch] = useState(TICKER) // set on click\n  const [seriesType, setSeriesType] = useState('TIME_SERIES_INTRADAY');\n  const [apiError, setApiError] = useState('')\n\n  const handleSelectChange = (event) => {\n    setSeriesType(event.target.value)\n    setSearch(\"\")\n    setSymbol(\"\")\n    setApiError(\"\")\n    event.preventDefault() // prevent bubbling up\n  }\n\n  // get full data set\n  // TO DO: Move these inside a hook\n  const { data, isLoading, isError, doFetch } = useDataApi(\n    search,\n    seriesType,\n    getSeriesUrl(search, seriesType),\n    initialTimeSeriesData\n  )\n  const spyData = useDataApi('SPY', seriesType, getSeriesUrl('SPY', seriesType), initialTimeSeriesData)\n  useEffect(() => {\n    if (search && !isLoading) {\n      doFetch(getSeriesUrl(search, seriesType))\n    }\n  }, [search, seriesType])\n\n  // get fundamental metrics\n    // TO DO: Move these inside a hook\n  const {\n    data: fundamentalsData,\n    isLoading: fundamentalsIsLoading,\n    isError: fundamentalsIsError,\n    doFetch: fundamentalsFoFetch,\n  } = useDataApi(search, seriesType, getFundamentalsUrl(search), initialFundamentals)\n  const {\n    Name,\n    Exchange,\n    Sector,\n    MarketCapitalization = 0,\n  } = fundamentalsData.data\n  useEffect(() => {\n    if (search && !fundamentalsIsLoading) {\n      fundamentalsFoFetch(getFundamentalsUrl(search))\n    }\n  }, [search, seriesType])\n\n  useEffect(() => {\n    let newApiError =\n      isError ||\n      fundamentalsIsError ||\n      fundamentalsData.data.Note ||\n      data.data.Note ||\n      spyData.data.data.Note\n    setApiError(Boolean(newApiError) ? \"Limit reached\": \"\")\n  }, [search, seriesType])\n\n  return (\n    <Fragment>\n      <form\n        onSubmit={(event) => {\n          event.preventDefault()\n          doFetch(getSeriesUrl(search, seriesType))\n        }}\n      >\n        <select\n          onChange={handleSelectChange}\n          style={{\n          width: \"147px\",\n          padding: \"2px\",\n          fontSize: \"14px\"\n        }}>\n          <option value=\"TIME_SERIES_INTRADAY\">Intraday</option>\n          <option value=\"TIME_SERIES_INTRADAY_EXTENDED\">Extended</option>\n        </select>\n        <input\n          type=\"text\"\n          value={symbol}\n          onChange={(event) => setSymbol(event.target.value)}\n        />\n        <button onClick={() => setSearch(symbol)} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {!search && <div>Click search to get data for ticker symbol...</div>}\n      {apiError && <div>{apiError}</div>}\n      {!apiError && search && isLoading && <div>Loading ...</div>}\n      {!apiError && search && !isLoading && (\n        <div>\n          {(seriesType) &&\n            <div>\n              <p>{symbol}</p>\n              <div\n                style={{\n                  margin: '10px auto',\n                  width: '70%'\n                }}\n              >\n                {/* {metaData.map(el => (\n                  <Card variant=\"outlined\">\n                    <CardContent>\n                      <Typography color=\"textSecondary\" gutterBottom>\n                        {el.split(\". \")[1]}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                ))} */}\n                <Card variant=\"outlined\">\n                  <CardContent>\n                    <Typography color=\"textPrimary\" gutterBottom>\n                      {Name}\n                    </Typography>\n                    <Typography color=\"textSecondary\" gutterBottom>\n                      Exchange: {Exchange}\n                    </Typography>\n                    <Typography color=\"textSecondary\" gutterBottom>\n                      Sector: {Sector}\n                    </Typography>\n                    <Typography color=\"textSecondary\" gutterBottom>\n                      Market CAP: ${numberWithCommas(MarketCapitalization)}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </div>\n              <Canvas\n                search={search}\n                data={data.data}\n                spyData={spyData.data.data}\n                symbol={symbol}\n              />\n            </div>\n          }\n        </div>\n      )}\n    </Fragment>\n  )\n}\n\nexport default Fetcher\n","import Fetcher from './Fetcher'\n\nexport default Fetcher\n","import React, { useState, useEffect } from 'react'\nimport { Table, Icon, Segment, Grid } from 'semantic-ui-react'\nimport './styles.css'\n\nconst tempData = [\n  {\n    type: 'Onboard Contractor',\n    status: 'Pending',\n    tasks: '2 of 4',\n    date: '2014-04-18',\n    name1: 'Create Zendesk Ticket',\n    name2: 'LDAP Access',\n    percent: 50,\n  },\n  {\n    type: 'Onboard Employee',\n    status: 'Done',\n    tasks: '1 of 3',\n    date: '2014-04-21',\n    name1: 'Equipment Setup',\n    name2: 'Microsoft Training',\n    percent: 100,\n  },\n  {\n    type: 'Onboard Contractor',\n    status: 'Error',\n    tasks: '3 of 3',\n    date: '2014-08-09',\n    name1: 'Create Zendesk Ticket',\n    name2: 'LDAP Access',\n    percent: 25,\n  },\n  {\n    type: 'Terminate Contractor',\n    status: 'Done',\n    tasks: '2 of 4',\n    date: '2014-04-24',\n    name1: 'Create Zendesk Ticket',\n    name2: 'LDAP Access',\n    percent: 100,\n  },\n  {\n    type: 'Terminate Contractor',\n    status: 'Pending',\n    tasks: '1 of 4',\n    date: '2014-04-26',\n    name1: 'Create Zendesk Ticket',\n    name2: 'LDAP Access',\n    percent: 90,\n  },\n]\n\nconst renderGridSubColumns = (item, index) => {\n  let taskName = item.name1\n  if (index > 1) taskName = item.name2\n  return (\n    <Grid columns={4}>\n      <Grid.Column>\n        <span>\n          {index}: {taskName}\n        </span>\n      </Grid.Column>\n      <Grid.Column>\n        <span>Status: {item.status}</span>\n      </Grid.Column>\n      <Grid.Column>\n        <span>Percent Complete: {item.percent}</span>\n      </Grid.Column>\n      <Grid.Column>\n        <span>\n          <button>Update</button>\n        </span>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nconst ExapndableTable = () => {\n  const [expandedRows, setExpanded] = useState([])\n  const [allItemRows, setData] = useState([])\n\n  useEffect(() => {\n    const handleRowClick = (rowId) => {\n      const currentExpandedRows = expandedRows\n      const isRowCurrentlyExpanded = currentExpandedRows.includes(rowId)\n\n      const newExpandedRows = isRowCurrentlyExpanded\n        ? currentExpandedRows.filter((id) => id !== rowId)\n        : currentExpandedRows.concat(rowId)\n\n      setExpanded(newExpandedRows)\n    }\n\n    // const renderItemCaret = (rowId) => {\n    //   const currentExpandedRows = expandedRows\n    //   const isRowCurrentlyExpanded = currentExpandedRows.includes(rowId);\n\n    //   if (isRowCurrentlyExpanded) {\n    //     return <Icon name=\"caret down\" />;\n    //   } else {\n    //     return <Icon name=\"caret right\" />;\n    //   }\n    // }\n\n    const renderItem = (item, index) => {\n      const itemRows = [\n        <Table.Row\n          onClick={() => handleRowClick(index)}\n          key={'row-data-' + index}\n        >\n          {/* <Table.Cell>{renderItemCaret(index)}</Table.Cell> */}\n          <Table.Cell>{item.type}</Table.Cell>\n          <Table.Cell>{item.status}</Table.Cell>\n          <Table.Cell>{item.date}</Table.Cell>\n          <Table.Cell>{item.tasks}</Table.Cell>\n        </Table.Row>,\n      ]\n\n      if (expandedRows.includes(index)) {\n        itemRows.push(\n          <Table.Row key={'row-expanded-' + index}>\n            <Table.Cell colSpan=\"5\">{renderItemDetails(item)}</Table.Cell>\n          </Table.Row>\n        )\n      }\n\n      return itemRows\n    }\n    let allItemRows = []\n    tempData.forEach((item, index) => {\n      const perItemRows = renderItem(item, index)\n      allItemRows = allItemRows.concat(perItemRows)\n    })\n    setData(allItemRows)\n  }, [expandedRows])\n\n  const renderItemDetails = (item) => (\n    <Segment basic>\n      <h2>2 Active Tasks</h2>\n      {renderGridSubColumns(item, 1)}\n      {renderGridSubColumns(item, 2)}\n    </Segment>\n  )\n\n  return (\n    <Table selectable>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Activity Type</Table.HeaderCell>\n          <Table.HeaderCell>Overall Status</Table.HeaderCell>\n          <Table.HeaderCell>Date Created</Table.HeaderCell>\n          <Table.HeaderCell>Tasks Completed</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>{allItemRows}</Table.Body>\n    </Table>\n  )\n}\n\nexport default ExapndableTable\n","import Table from './Table'\n\nexport default Table\n","export default (state, action) => {\n  switch (action.type) {\n    case 'update_chips':\n      return {\n        ...state,\n        chips: action.data,\n      }\n    case 'update_members':\n      return {\n        ...state,\n        members: action.data,\n      }\n    default:\n      return state\n  }\n}","// Global state for announcement dialog\nimport React, { createContext, useContext, useReducer } from 'react'\nimport listPageContext from './reducer'\n\nexport const StateContext = createContext()\n\nexport const StateProvider = ({ initialState, children }) => (\n  <StateContext.Provider value={useReducer(listPageContext, initialState)}>\n    {children}\n  </StateContext.Provider>\n)\n\nexport const useListPageContext = () => useContext(StateContext) // This is to avoid duplication on the consumer side\n","import React, { useState, useEffect } from 'react'\nimport { find, propEq } from 'ramda'\nimport {\n  Grid,\n  FormControl,\n  TextField,\n  MenuItem,\n  InputLabel,\n  Input,\n  Select,\n  Button,\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useListPageContext } from './context'\nimport './styles.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}))\n\nconst MemberSetup = (props) => {\n  const [name, setName] = useState('')\n  const [annual_fee, setFee] = useState(0)\n  const [membership_type, setType] = useState({ code: '' })\n  const [country, setCountry] = useState({ code: '' })\n  const [currency, setCurrency] = useState({ code: '' })\n  const [from_date, setFromDate] = useState('')\n\n  const {\n    countriesReference,\n    currenciesReference,\n    membershipTypesReference,\n  } = props\n  const [data, dispatch] = useListPageContext()\n  const { members } = data\n\n  useEffect(() => {\n    setName('John')\n    setFee(10)\n    setCountry(countriesReference[0])\n    setCurrency(currenciesReference[0])\n    setType(membershipTypesReference[0])\n    setFromDate('2021-05-24')\n  }, [])\n\n  const clearForm = () => {\n    setName('')\n    setFee(0)\n    setType('')\n    setCountry('')\n    setCurrency('')\n    setFromDate('')\n  }\n\n  const handleFormChange = (event, id) => {\n    const fieldId = id || event.target.id\n    switch (fieldId) {\n      case 'name':\n        setName(event.target.value)\n        break\n      case 'country':\n        setCountry(find(propEq('code', event.target.value), countriesReference))\n        break\n      case 'currency':\n        setCurrency(\n          find(propEq('code', event.target.value), currenciesReference)\n        )\n        break\n      case 'annual_fee':\n        setFee(event.target.value)\n        break\n      case 'membership_type':\n        setType(\n          find(propEq('code', event.target.value), membershipTypesReference)\n        )\n        break\n      case 'from_date':\n        setFromDate(event.target.value)\n        break\n      default:\n        break\n    }\n  }\n\n  const handleClick = (e) => {\n    e.preventDefault()\n    const updatedMembers = members\n    updatedMembers.push({\n      name: name,\n      country: country.description,\n      membership_type: membership_type.description,\n      currency: currency.description,\n      annual_fee: annual_fee,\n      from_date: from_date,\n      to_date: '30th Jun, 2021',\n    })\n    dispatch({ type: 'update_members', data: updatedMembers })\n    clearForm()\n  }\n\n  const classes = useStyles()\n\n  return (\n    <div>\n      <h3>Add new member</h3>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <Grid container justify=\"space-around\">\n          <FormControl>\n            <InputLabel htmlFor=\"name\">Name</InputLabel>\n            <Input\n              id=\"name\"\n              value={name}\n              onChange={(e) => handleFormChange(e, 'name')}\n            />\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"country\">Country</InputLabel>\n            <Select\n              labelId=\"country\"\n              id=\"country\"\n              value={country.code}\n              onChange={(e) => handleFormChange(e, 'country')}\n            >\n              {countriesReference.map((option) => (\n                <MenuItem\n                  id={`${option.code}_cntry`}\n                  key={option.code}\n                  value={option.code}\n                >\n                  {option.description}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"membership\">Type</InputLabel>\n            <Select\n              labelId=\"membership\"\n              id=\"membership\"\n              value={membership_type.code}\n              onChange={(e) => handleFormChange(e, 'membership_type')}\n            >\n              {membershipTypesReference.map((option) => (\n                <MenuItem\n                  id={`${option.code}_membership`}\n                  key={option.code}\n                  value={option.code}\n                >\n                  {option.description}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"membership\">Currency</InputLabel>\n            <Select\n              labelId=\"currency\"\n              id=\"currency\"\n              value={currency.code}\n              onChange={(e) => handleFormChange(e, 'currency')}\n            >\n              {currenciesReference.map((option) => (\n                <MenuItem\n                  id={`${option.code}_currency`}\n                  key={option.code}\n                  value={option.code}\n                >\n                  {option.description}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel htmlFor=\"annual_fee\">Annual Fee</InputLabel>\n            <Input\n              id=\"annual_fee\"\n              value={annual_fee}\n              onChange={(e) => handleFormChange(e, 'annual_fee')}\n              disabled={false}\n            />\n          </FormControl>\n          <FormControl>\n            <TextField\n              id=\"from_date\"\n              label=\"From Date\"\n              type=\"date\"\n              value={from_date}\n              onChange={(e) => handleFormChange(e, 'from_date')}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              disabled={false}\n            />\n          </FormControl>\n        </Grid>\n      </form>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleClick}\n        className={'addButton'}\n      >\n        Add\n      </Button>\n    </div>\n  )\n}\n\nexport default MemberSetup\n","export const headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n  {\n    id: 'membershipType',\n    numeric: false,\n    disablePadding: false,\n    label: 'Membership Type',\n  },\n  { id: 'country', numeric: false, disablePadding: false, label: 'Country' },\n  {\n    id: 'currency',\n    numeric: false,\n    disablePadding: false,\n    label: 'Currency',\n  },\n  { id: 'annual_fee', numeric: true, disablePadding: false, label: 'Fee' },\n  { id: 'from', numeric: false, disablePadding: false, label: 'From' },\n  { id: 'to', numeric: false, disablePadding: false, label: 'To' },\n]\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  TableSortLabel,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from '@material-ui/core'\n\nimport { headCells } from './config'\n\nfunction Head(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props\n  const sortHandler = (property) => (event) => {\n    onRequestSort(event, property)\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={sortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n}\n\nexport default Head\n","export const formatDate = (dateVal) => {\n  const options = {\n    weekday: 'short',\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  }\n  return new Date(dateVal).toLocaleDateString('en-US', options)\n}\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\nconst getComparator = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nexport const stableSort = (array, order, orderBy) => {\n  const comparator = getComparator(order, orderBy)\n  const stabilizedThis = array.map((el, index) => [el, index])\n  stabilizedThis.sort((a, b) => {\n    const newOrder = comparator(a[0], b[0])\n    if (newOrder !== 0) return newOrder\n    return a[1] - b[1]\n  })\n  return stabilizedThis.map((el) => el[0])\n}\n","// import moment from \"utils/moment\";\n\nexport const substitute = (template, obj) => {\n  return template.replace(/\\${([a-z0-9_]+)}/gi, (match, capture) => {\n    return obj[capture]\n  })\n}\n\n// function to format currency - takes in value and the currencyStyle\nexport const formatCurrency = (value, currencyStyle = 'USD') =>\n  `${new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: `${currencyStyle}`,\n  }).format(value)}`\n\n// // function to format date to normal form\n// export const formatDate = value => moment(new Date(value)).format(\"MM/DD/YYYY\");\n\n// // function to fomrat time to hh:mm:ss\n// export const formatTime = value => {\n//   return moment.tz(value, \"America/Los_Angeles\").format(\"HH:mm:ss\");\n// };\n\n// // function to fomrat date to MM/DD/YYYY pacific\n// export const formatDateInPacific = value =>\n//   moment.tz(value, \"America/Los_Angeles\").format(\"MM/DD/YYYY\");\n\n// // function to fomrat date time to MM/DD/YYYY HH:mm:ss z pacific\n// export const formatDateTimeInPacific = (value, format) =>\n//   //momentTimezone.tz(value, 'America/Los_Angeles').format(format)\n//   \"\";\n\n// // function to format date to normal form ignoring timeZone\n// export const formatDateIgnoringTimeZone = value =>\n//   moment.utc(value).format(\"MM/DD/YYYY\");\n\n// // function to format date and time to normal form\n// export const formatDateTimeIgnoringTimeZone = value =>\n//   moment(new Date(value)).format(\"MM/DD/YYYY HH:mm:ss\");\n\nexport const capitalize = (word) => word.charAt(0).toUpperCase() + word.slice(1)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nimport EnhancedTableHead from './Head'\nimport { formatDate, stableSort } from './utils'\nimport { formatCurrency } from '../../utils/string'\nimport { useListPageContext } from '../../ListPage/context' // TO DO: Make this generic\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}))\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles()\n  const { rows, selected, setSelected, dispatch } = props\n  const numSelected = selected.length\n\n  const deleteMembers = () => {\n    const updated = rows.filter((row, i) => selected[i] !== row.name)\n    dispatch({ type: 'update_members', data: updated })\n    setSelected([])\n  }\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Memberships\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\" onClick={deleteMembers}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  selected: PropTypes.arrayOf(PropTypes.string),\n  rows: PropTypes.array.isRequired,\n  dispatch: () => {},\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}))\n\nexport default function EnhancedTable() {\n  const classes = useStyles()\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [selected, setSelected] = React.useState([])\n  const [page, setPage] = React.useState(0)\n  const [dense, setDense] = React.useState(false)\n  const [rowsPerPage, setRowsPerPage] = React.useState(10)\n  const [data, dispatch] = useListPageContext()\n  const rows = data.members\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name)\n      setSelected(newSelecteds)\n      return\n    }\n    setSelected([])\n  }\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name)\n    let newSelected = []\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name)\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1))\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1))\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      )\n    }\n\n    setSelected(newSelected)\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked)\n  }\n\n  const isSelected = (name) => selected.indexOf(name) !== -1\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar\n          rows={rows}\n          selected={selected}\n          setSelected={setSelected}\n          dispatch={dispatch}\n        />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, order, orderBy)\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name)\n                  const labelId = `enhanced-table-checkbox-${index}`\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{\n                            'aria-labelledby': labelId,\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        align=\"center\"\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {row.membership_type}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.country}</TableCell>\n                      <TableCell align=\"center\">{row.currency}</TableCell>\n                      <TableCell align=\"right\">\n                        {formatCurrency(row.annual_fee)}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {formatDate(row.from_date)}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {formatDate(row.to_date)}\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  )\n}\n","import Table from './Table'\n\nexport default Table\n","import React from 'react'\n\nconst SVG = ({\n  style = {\n    position: 'absolute',\n    right: '5px',\n    bottom: '15px',\n    paddingRight: '4px',\n    enableBackground: 'new 0 0 451 451',\n  },\n  fill = '#000',\n  width = '15px',\n  height = '20px',\n  className = '',\n  viewBox = '0 0 40 26',\n}) => (\n  <svg\n    version=\"1.1\"\n    id=\"Capa_1\"\n    // xmlns=\"http://www.w3.org/2000/svg\"\n    // xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    x=\"0px\"\n    y=\"0px\"\n    width={width}\n    height={height}\n    viewBox=\"0 0 451 451\"\n    style={style}\n    // xml:space=\"preserve\"\n  >\n    <g>\n      <path\n        d=\"M447.05,428l-109.6-109.6c29.4-33.8,47.2-77.9,47.2-126.1C384.65,86.2,298.35,0,192.35,0C86.25,0,0.05,86.3,0.05,192.3\n\t\ts86.3,192.3,192.3,192.3c48.2,0,92.3-17.8,126.1-47.2L428.05,447c2.6,2.6,6.1,4,9.5,4s6.9-1.3,9.5-4\n\t\tC452.25,441.8,452.25,433.2,447.05,428z M26.95,192.3c0-91.2,74.2-165.3,165.3-165.3c91.2,0,165.3,74.2,165.3,165.3\n\t\ts-74.1,165.4-165.3,165.4C101.15,357.7,26.95,283.5,26.95,192.3z\"\n      />\n    </g>\n  </svg>\n)\n\nexport default SVG\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './search.css'\nimport SearchSVG from './images/search'\n\nconst Search = ({ searchBy, searchText, handleSearch }) => (\n  <div className=\"searchBox\">\n    <input\n      type=\"text\"\n      placeholder={`${searchBy} Search`}\n      value={searchText}\n      onChange={(e) => handleSearch(e.target.value)}\n    />\n    <SearchSVG />\n  </div>\n)\n\nSearch.propTypes = {\n  searchBy: PropTypes.string,\n  searchText: PropTypes.string.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n}\n\nexport default Search\n","import React from 'react'\nimport { find, propEq } from 'ramda'\nimport { PropTypes } from 'prop-types'\nimport { Chip } from '@material-ui/core'\nimport { useListPageContext } from './context'\nimport './styles.css'\n\nconst getNewMembers = (chips, members) => {\n  if (!chips.length) return members\n  let newMembers = []\n  chips.forEach((currChip) => {\n    const member =\n      find(propEq(currChip.filterBy, currChip.code), members) ||\n      find(propEq(currChip.filterBy, currChip.filterText), members)\n    if (member) newMembers.push(member)\n  })\n  return newMembers\n}\n\nconst Toolbar = ({ members }) => {\n  const [data, dispatch] = useListPageContext()\n  const { chips = [] } = data\n\n  const toggleChips = (chip) => {\n    let newchips = chips\n    const index = newchips.findIndex((item) => chip.code === item.code)\n    if (index === -1) {\n      newchips.push(chip)\n    } else {\n      newchips.splice(index, 1)\n    }\n    dispatch({ type: 'update_chips', data: newchips })\n    dispatch({\n      type: 'update_members',\n      data: getNewMembers(newchips, members),\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <div>\n        <div className=\"toolbar\">\n          <div className=\"wrapper\">\n            {chips.map((chip) => (\n              <Chip\n                key={chip.code}\n                label={chip.filterText}\n                onDelete={() => {\n                  toggleChips(chip)\n                }}\n                className={'memberChip'}\n                color=\"primary\"\n              />              \n            ))}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nToolbar.propTypes = {\n  data: PropTypes.array,\n  toggleChips: PropTypes.func,\n}\n\nexport default Toolbar\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { find, propEq } from 'ramda'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { useListPageContext } from './context'\n\nconst styles = (theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n})\n\nconst calcuateFilteredData = (chips, members) => {\n  if (!chips.length) return members\n  let newMembers = []\n  chips.forEach((currChip) => {\n    const member =\n      find(propEq(currChip.filterBy, currChip.code), members) ||\n      find(propEq(currChip.filterBy, currChip.filterText), members)\n    if (member) newMembers.push(member)\n  })\n  return newMembers\n}\n\nconst SectionList = (props) => {\n  const { classes, filterFacets, members, filterBy, isIchecked } = props\n\n  const [state, setState] = useState({\n    checked: [0],\n  })\n  const [{ chips }, dispatch] = useListPageContext()\n\n  const toggleChips = (chip) => {\n    let newchips = chips\n    const index = newchips.findIndex((item) => chip.code === item.code)\n    if (index === -1) {\n      newchips.push(chip)\n    } else {\n      newchips.splice(index, 1)\n    }\n    dispatch({ type: 'update_chips', data: newchips })\n    dispatch({\n      type: 'update_members',\n      data: calcuateFilteredData(newchips, members),\n    })\n  }\n\n  const handleToggle = (item, filterBy) => () => {\n    const { checked } = state\n    const index = checked.indexOf(item.code)\n    const newChecked = [...checked]\n\n    if (index === -1) {\n      newChecked.push(item.code)\n    } else {\n      newChecked.splice(index, 1)\n    }\n\n    setState({\n      checked: newChecked,\n    })\n\n    toggleChips({\n      filterBy: filterBy,\n      filterText: item.description,\n      code: item.code,\n    })\n  }\n\n  return (\n    <List className={classes.root}>\n      {filterFacets.map((item) => (\n        <ListItem\n          key={`#${item.code}`}\n          dense\n          button\n          onClick={handleToggle(item, filterBy)}\n        >\n          <Checkbox\n            checked={isIchecked(item.description)}\n            tabIndex={-1}\n            disableRipple\n          />\n          <ListItemText primary={`(${item.code}) ${item.description}`} />\n        </ListItem>\n      ))}\n    </List>\n  )\n}\n\nSectionList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  filterFacets: PropTypes.array,\n  searchText: PropTypes.string,\n  filterBy: PropTypes.string,\n  toggleChips: PropTypes.func,\n  isIchecked: PropTypes.func,\n}\n\nexport default withStyles(styles)(SectionList)\n// <List style={Object.assign({}, Style.SectionList)}>\n//   {props.filterFacets.map((item, index) => {\n//     if (\n//       item.description\n//         .toLowerCase()\n//         .indexOf(props.searchText.toLowerCase()) !== -1\n//     ) {\n//       return (\n//         <ListItem\n//           style={{ fontSize: 12 }}\n//           key={index}\n//           leftCheckbox={\n//             <Checkbox\n//               onCheck={event => {\n//                 props.toggleChips(\n//                   item.code,\n//                   item.description,\n//                   props.filterBy\n//                 );\n//               }}\n//               defaultChecked={props.isIchecked(item.description)}\n//             />\n//           }\n//           primaryText={item}\n//         />\n//       );\n//     } else {\n//       return <div>{item}</div>;\n//     }\n//   })}\n// </List>\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24 24H0V0h24v24z\",\n  fill: \"none\"\n});\n\nfunction SvgLeftBig(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLeftBig);\nexport default __webpack_public_path__ + \"static/media/left_big.b6a1d57b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  fill: \"none\"\n});\n\nfunction SvgRightBig(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRightBig);\nexport default __webpack_public_path__ + \"static/media/right_big.c126d230.svg\";\nexport { ForwardRef as ReactComponent };","import ListPage from './ListPage'\n\nexport default ListPage\n","import React, { useState } from 'react'\nimport Divider from '@material-ui/core/Divider'\nimport Memberships from './Memberships'\nimport FilterTable from '../Components/FilterTable'\nimport Search from './Search'\nimport Toolbar from './Chips'\nimport SubList from './SubList'\nimport { StateProvider } from './context/index'\nimport { ReactComponent as LeftArrow } from './images/left_big.svg'\nimport { ReactComponent as RightArrow } from './images/right_big.svg'\nimport { generateData } from './context/mockData'\n\nconst ListPage = (props) => {\n  const [\n    rows,\n    countriesReference,\n    currenciesReference,\n    membershipTypesReference,\n    initialChipData,\n  ] = generateData()\n  const [members, setMembers] = useState(rows)\n  const [chipData, setChipData] = useState(initialChipData)\n\n  const [searchTextCountries, setSearchTextCountries] = useState('')\n  const [searchTextCurrencies, setSearchTextCurrencies] = useState('')\n  const [searchTextMemberships, setSearchTextMemberships] = useState('')\n  const [open, setOpen] = useState(false)\n  const [sideWidth, setSideWidth] = useState('16.66%')\n  const [mainWidth, setMinWidth] = useState('83.33%')\n  const [rightIconVisibility, setIconVisibility] = useState('hidden')\n  const [mainDisplay, setMainDisplay] = useState('inherit')\n\n  const handleToggle = () => {\n    setOpen(!open)\n    setSideWidth(sideWidth === '16.66%' ? '3%' : '16.66%')\n    setMinWidth(mainWidth === '83.33%' ? '97%' : '83.33%')\n    setMainDisplay(mainDisplay === 'none' ? 'inherit' : 'none')\n    setIconVisibility(rightIconVisibility === 'hidden' ? 'visible' : 'hidden')\n  }\n\n  const isIchecked = (description) => {\n    const index = chipData.map((chip) => chip.filterText).indexOf(description)\n    return index === -1 ? false : true\n  }\n\n  const handleSearchCountries = (text) => {\n    setSearchTextCountries(text)\n  }\n\n  const handleSearchCurrencies = (text) => {\n    setSearchTextCurrencies(text)\n  }\n\n  const handleSearchMemberships = (text) => {\n    setSearchTextMemberships(text)\n  }\n\n  return (\n    <StateProvider initialState={{ chips: initialChipData, members: rows }}>\n      {\n        <div className=\"col-1-1 mainContent\">\n          <div\n            className=\"col-2-12\"\n            style={{\n              width: sideWidth,\n              overflowY: 'scroll',\n              maxHeight: '800px',\n              padding: '10px',\n              background: '#fff'\n            }}\n          >\n            <div style={Object.assign({}, { display: mainDisplay })}>\n              <div className=\"sidebarHeader\">\n                <div\n                  style={Object.assign(\n                    {},\n                    {\n                      float: 'left',\n                      padding: 5,\n                      width: '50%',\n                      textAlign: 'left',\n                    }\n                  )}\n                >\n                  Filters\n                </div>\n                <div\n                  style={Object.assign(\n                    {},\n                    {\n                      float: 'right',\n                      padding: 5,\n                      width: '50%',\n                      textAlign: 'right',\n                    }\n                  )}\n                >\n                  <LeftArrow onClick={handleToggle} alt=\"left\" />\n                </div>\n              </div>\n              <Divider />\n              <div>\n                <Search\n                  handleSearch={handleSearchCountries}\n                  searchText={searchTextCountries}\n                  searchBy={'Country'}\n                />\n                <SubList\n                  filterFacets={countriesReference}\n                  members={members}\n                  filterBy={'country'}\n                  searchText={searchTextCountries}\n                  isIchecked={isIchecked}\n                />\n              </div>\n              <Divider />\n              <div>\n                <Search\n                  handleSearch={handleSearchCurrencies}\n                  searchText={searchTextCurrencies}\n                  searchBy={'Currency'}\n                />\n                <SubList\n                  filterFacets={currenciesReference}\n                  members={members}\n                  filterBy={'currency'}\n                  searchText={searchTextCurrencies}\n                  isIchecked={isIchecked}\n                />\n              </div>\n              <Divider />\n              <div>\n                <Search\n                  handleSearch={handleSearchMemberships}\n                  searchText={searchTextMemberships}\n                  searchBy={'Membership Type'}\n                />\n                <SubList\n                  filterFacets={membershipTypesReference}\n                  members={members}\n                  filterBy={'membership_type'}\n                  searchText={searchTextMemberships}\n                  isIchecked={isIchecked}\n                />\n              </div>\n            </div>\n            <div style={Object.assign({}, { visibility: rightIconVisibility })}>\n              <h3 />\n              <RightArrow\n                style={Object.assign({}, { float: 'right' })}\n                onClick={handleToggle}\n                alt=\"right\"\n              />\n            </div>\n          </div>\n          <div\n            className=\"col-10-12\"\n            style={{\n              width: mainWidth,\n              position: 'relative',\n              overflowY: 'scroll',\n              maxHeight: '800px',\n              padding: '5px',\n              background: '#fff'\n            }}\n          >\n            <Toolbar members={members} />\n            <FilterTable />\n          </div>\n        </div>\n      }\n      <Memberships\n        countriesReference={countriesReference}\n        currenciesReference={currenciesReference}\n        membershipTypesReference={membershipTypesReference}\n      />\n    </StateProvider>\n  )\n}\n\nexport default ListPage\n","import faker from 'faker'\nimport { find, prop, propEq, uniqBy } from 'ramda'\n\nexport const generateData = () => {\n  let rows = []\n  for (var i = 0; i < 10; i++) {\n    rows.push({\n      id: i,\n      name: faker.name.findName(),\n      country: faker.address.country(),\n      currency: faker.finance.currencySymbol(),\n      annual_fee: faker.random.number(),\n      from_date: `${faker.date.past()}`,\n      to_date: `${faker.date.future()}`,\n      membership_type: 'Basic',\n    })\n  }\n  let currenciesReference = []\n  let countriesReference = []\n\n  const membershipTypesReference = [{ code: 'B', description: 'Basic' }]\n\n  const chipData = [\n    { filterBy: 'membership_type', filterText: 'Basic', code: 'B' },\n  ]\n\n  rows.forEach((row) => {\n    if (!find(propEq('code', row.currency))(currenciesReference))\n      currenciesReference.push({\n        code: row.currency,\n        description: row.currency,\n      })\n    if (!find(propEq('code', row.country))(countriesReference))\n      countriesReference.push({\n        code: row.country,\n        description: row.country,\n      })\n  })\n\n  return [\n    uniqBy(prop('id'), rows),\n    countriesReference,\n    currenciesReference,\n    membershipTypesReference,\n    chipData,\n  ]\n}\n","import NavBar from './NavBar'\n\nexport default NavBar\n","import React, { useEffect } from 'react'\nimport { AppBar, Toolbar } from '@material-ui/core'\nimport './styles.css'\n\nconst NavBar = () => {\n  const handleHomeClickResponsive = () => {\n    var x = document.getElementById('myTopnav')\n    if (x.className === 'topnav') {\n      x.className += ' responsive'\n    } else {\n      x.className = 'topnav'\n    }\n  }\n\n  useEffect(() => {\n    const pages = ['/', '/stocks', '/filter_table', '/expand_table']\n    var curPage = document.URL\n    curPage = curPage.substr(curPage.lastIndexOf('/'))\n    const routeIndex = pages.indexOf(curPage)\n  \n    // Applies color based on current page\n    const links = document.getElementById('myTopnav').children\n    links[routeIndex] && links[routeIndex].classList.add('current-link')\n  }, [])\n\n  return (\n    <AppBar position=\"static\" color=\"default\" elevation={0} className=\"appBar\">\n      <Toolbar>\n        <div className=\"topnav\" id=\"myTopnav\">\n          <a href={'/dashboard'}>Dashboard</a>\n          <a href={'/dashboard/stocks'}>Stock Symbol Tracker</a>\n          <a href={'/dashboard/filter_table'}>Filterable Table</a>\n          <a href={'/dashboard/expand_table'}>Expandable Table</a>\n          <a href={'#'} className=\"icon\" onClick={handleHomeClickResponsive}>\n            <i className=\"fa fa-bars\"></i>\n          </a>\n        </div>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default NavBar\n","export default __webpack_public_path__ + \"static/media/chart.f22b8185.jpg\";","export default __webpack_public_path__ + \"static/media/list_table.4fe82166.png\";","export default __webpack_public_path__ + \"static/media/expand_table.5913f09d.png\";","import React from 'react'\nimport { Link, Route } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport StcokFetcher from 'StockFetcher'\nimport Table from 'Components/ExpandableTable'\nimport ListPage from 'ListPage'\nimport NavBar from 'Components/NavBar'\n\nimport './App.css'\nimport chart from './images/chart.jpg'\nimport listImg from './images/list_table.png'\nimport expandImg from './images/expand_table.png'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <a target=\"_blank\" href=\"https://aldizh.github.io/dashboard\">\n        Dashboard&nbsp;\n      </a>\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    position: 'relative',\n    textAlign: 'center',\n    // backgroundImage: 'url(./images/background.jpg)',\n    // backgroundRepeat: 'no-repeat',\n    minHeight: '100vh',\n    fontSize: 'calc(10px + 2vmin)'\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    // backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardActions: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    // backgroundColor: theme.palette.background.paper,\n    // padding: theme.spacing(6),\n  },\n}))\n\nconst Album = (props) => {\n  const classes = useStyles()\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div className={classes.app}>\n        <Route\n          exact={true}\n          path=\"/\"\n          render={() => (\n            <>\n              <NavBar />\n              <main>\n                {/* Hero unit */}\n                <div className={classes.heroContent}>\n                  <Container maxWidth=\"sm\">\n                    <Typography\n                      variant=\"h4\"\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      gutterBottom\n                    >\n                      Sample React Projects\n                    </Typography>\n                    <Typography\n                      variant=\"h5\"\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      paragraph\n                    >\n                      These are just a few projects to showcase the\n                      versatility of react when it comes to building slick and\n                      efficient UI components.\n                    </Typography>\n                    {/* <div className={classes.heroButtons}>\n                    <Grid container spacing={2} justify=\"center\">\n                      <Grid item>\n                        <Button variant=\"outlined\" color=\"primary\">\n                          <Link to={'/'}>Profile</Link>\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </div> */}\n                  </Container>\n                </div>\n                <Container className={classes.cardGrid} maxWidth=\"md\">\n                  {/* End hero unit */}\n                  <Grid container spacing={4}>\n                    <Grid item key={1} xs={12} sm={6} md={4}>\n                      <Card className={classes.card}>\n                        <CardMedia\n                          className={classes.cardMedia}\n                          image={expandImg}\n                          title=\"Expandable Table\"\n                        />\n                        <CardContent className={classes.cardContent}>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Expandable Table\n                          </Typography>\n                          <Typography>\n                            Nice exapndable table to show more row specific\n                            info.\n                          </Typography>\n                        </CardContent>\n                        <CardActions className={classes.cardActions}>\n                          <Button size=\"small\" color=\"primary\">\n                            <Link to={'/expand_table'}>View</Link>\n                          </Button>\n                        </CardActions>\n                      </Card>\n                    </Grid>\n                    <Grid item key={2} xs={12} sm={6} md={4}>\n                      <Card className={classes.card}>\n                        <CardMedia\n                          className={classes.cardMedia}\n                          image={chart}\n                          title=\"Chart\"\n                        />\n                        <CardContent className={classes.cardContent}>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Stock Tracker\n                          </Typography>\n                          <Typography>\n                            Compare any ticker symbol against the S&P benchmark\n                            to get stock&apos performance.\n                          </Typography>\n                        </CardContent>\n                        <CardActions className={classes.cardActions}>\n                          <Button size=\"small\" color=\"primary\">\n                            <Link to={'/stocks'}>View</Link>\n                          </Button>\n                        </CardActions>\n                      </Card>\n                    </Grid>\n                    <Grid item key={3} xs={12} sm={6} md={4}>\n                      <Card className={classes.card}>\n                        <CardMedia\n                          className={classes.cardMedia}\n                          image={listImg}\n                          title=\"Filterable Table\"\n                        />\n                        <CardContent className={classes.cardContent}>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Filterable List\n                          </Typography>\n                          <Typography>\n                            List page with filter and pagination capabilities\n                          </Typography>\n                        </CardContent>\n                        <CardActions className={classes.cardActions}>\n                          <Button size=\"small\" color=\"primary\">\n                            <Link to={'/filter_table'}>View</Link>\n                          </Button>\n                        </CardActions>\n                      </Card>\n                    </Grid>\n                  </Grid>\n                </Container>\n              {props.children}\n              </main>\n              {/* Footer */}\n              <footer className={classes.footer}>\n                <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                  Thank you for visiting\n                </Typography>\n                <Typography variant=\"subtitle1\" align=\"center\" color=\"textPrimary\" component=\"p\">\n                  Feel free to check out my&nbsp;\n                  <a target=\"_blank\" href=\"https://aldizhupani.medium.com/\">medium</a>{' blog'}\n                </Typography>\n                <Copyright />\n              </footer>\n              {/* End footer */}\n            </>\n          )}\n        />\n        <Route\n          exact\n          path=\"/stocks\"\n          render={() => (\n            <React.Fragment>\n              <NavBar />\n              <main>\n                <div className={classes.heroContent}>\n                  <StcokFetcher />\n                  {props.children}\n                </div>\n              </main>\n            </React.Fragment>\n          )}\n        />\n        <Route\n          exact\n          path=\"/expand_table\"\n          render={() => (\n            <React.Fragment>\n              <NavBar />\n              <main>\n                <div className={classes.heroContent}>\n                  <Table />\n                  {props.children}\n                </div>\n              </main>\n            </React.Fragment>\n          )}\n        />\n        <Route\n          exact\n          path=\"/filter_table\"\n          render={() => (\n            <React.Fragment>\n              <NavBar />\n              <main>\n                <div className={classes.heroContent}>\n                  <ListPage />\n                  {props.children}\n                </div>\n              </main>\n            </React.Fragment>\n          )}\n        />\n      </div>\n    </React.Fragment>\n  )\n}\n\n\nexport default Album","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport ParticlesBg from \"particles-bg\";\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App>\n        <ParticlesBg type=\"circle\" bg={true} />\n      </App>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}