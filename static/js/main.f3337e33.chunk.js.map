{"version":3,"sources":["StockFetcher/Canvas.js","hooks/useData.js","StockFetcher/Fetcher.js","StockFetcher/index.js","Components/ExpandableTable/Table.js","Components/ExpandableTable/index.js","ListPage/context/reducer.js","ListPage/context/index.js","ListPage/Memberships.js","Components/FilterTable/config.js","Components/FilterTable/Head.js","Components/FilterTable/utils.js","utils/string.js","Components/FilterTable/Table.js","Components/FilterTable/index.js","ListPage/images/search.js","ListPage/Search.js","ListPage/Chips.js","ListPage/SubList.js","ListPage/images/left_big.svg","ListPage/images/right_big.svg","ListPage/index.js","ListPage/ListPage.js","ListPage/context/mockData.js","Components/NavBar/index.js","Components/NavBar/NavBar.js","images/chart.jpg","images/list_table.png","images/expand_table.png","App.js","serviceWorker.js","index.js"],"names":["defaultApiData","getBaseWeightedPrice","price","startingPrice","Number","getXData","res","Object","keys","getYData","values","Canvas","state","dataPoints","spyDataPoints","this","props","data","spyData","timeIntervalKeys","timeIntervalValues","lastIndex","length","earliestDataPoint","i","push","x","Date","y","spyTimeIntervalKeys","spyTimeIntervalValues","earliestSPYDataPoint","setState","chart","render","search","times","options","theme","animationEnabled","title","text","axisY","prefix","axisX","interVal","interValType","labelFormatter","e","CanvasJS","formatDate","value","toolTip","shared","type","name","showInLegend","xValueType","xValueFormatString","yValueFormatString","navigator","slider","minimum","maximum","containerProps","width","height","margin","onRef","ref","React","Component","dataFetchReducer","action","isLoading","isError","payload","Error","useDataApi","initialUrl","initialData","useState","url","setUrl","useReducer","dispatch","useEffect","a","axios","result","fetchData","doFetch","API_KEY","initialTimeSeriesData","symbol","initialFundamentals","Name","Exchange","Sector","MarketCapitalization","getSeriesData","getFundamentals","Fetcher","setSymbol","setSearch","lastTime","now","fundamentalsData","fundamentalsIsLoading","fundamentalsIsError","fundamentalsFoFetch","apiError","Note","onSubmit","event","preventDefault","onChange","target","onClick","style","Card","variant","CardContent","Typography","color","gutterBottom","toString","replace","tempData","status","tasks","date","name1","name2","percent","renderGridSubColumns","item","index","taskName","columns","Column","Table","expandedRows","setExpanded","allItemRows","setData","renderItem","itemRows","Row","rowId","currentExpandedRows","newExpandedRows","includes","filter","id","concat","handleRowClick","Cell","colSpan","renderItemDetails","forEach","perItemRows","Segment","basic","selectable","Header","HeaderCell","Body","chips","members","StateContext","createContext","StateProvider","initialState","children","Provider","listPageContext","useListPageContext","useContext","useStyles","makeStyles","root","spacing","MemberSetup","setName","annual_fee","setFee","code","membership_type","setType","country","setCountry","currency","setCurrency","from_date","setFromDate","countriesReference","currenciesReference","membershipTypesReference","handleFormChange","find","propEq","classes","className","noValidate","autoComplete","Grid","container","justify","FormControl","InputLabel","htmlFor","Input","Select","labelId","map","option","MenuItem","description","disabled","TextField","label","InputLabelProps","shrink","Button","updatedMembers","to_date","headCells","numeric","disablePadding","Head","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","dateVal","toLocaleDateString","weekday","year","month","day","descendingComparator","b","stableSort","array","comparator","getComparator","stabilizedThis","el","sort","newOrder","formatCurrency","currencyStyle","Intl","NumberFormat","format","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","primary","dark","flex","EnhancedTableToolbar","rows","selected","setSelected","clsx","component","Tooltip","IconButton","aria-label","updated","row","paper","marginBottom","table","minWidth","border","clip","overflow","position","top","setOrder","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","Paper","TableContainer","aria-labelledby","size","newSelecteds","n","TableBody","slice","isItemSelected","indexOf","hover","selectedIndex","newSelected","handleClick","role","aria-checked","tabIndex","scope","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","SVG","right","bottom","enableBackground","fill","viewBox","version","d","Search","searchBy","searchText","handleSearch","placeholder","getNewMembers","newMembers","currChip","member","filterBy","filterText","Toolbar","Fragment","chip","Chip","onDelete","newchips","findIndex","splice","toggleChips","calcuateFilteredData","withStyles","maxWidth","background","filterFacets","isIchecked","handleToggle","newChecked","List","ListItem","button","disableRipple","ListItemText","_extends","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","_ref3","SvgLeftBig","_ref","svgRef","titleId","xmlns","ForwardRef","SvgRightBig","ListPage","faker","findName","address","finance","currencySymbol","random","number","past","future","uniqBy","prop","generateData","initialChipData","chipData","searchTextCountries","setSearchTextCountries","searchTextCurrencies","setSearchTextCurrencies","searchTextMemberships","setSearchTextMemberships","open","setOpen","sideWidth","setSideWidth","mainWidth","setMinWidth","rightIconVisibility","setIconVisibility","mainDisplay","setMainDisplay","overflowY","maxHeight","display","float","textAlign","alt","Divider","SubList","visibility","FilterTable","Memberships","NavBar","curPage","document","URL","substr","lastIndexOf","routeIndex","links","getElementById","classList","add","AppBar","elevation","href","Copyright","getFullYear","app","backgroundImage","backgroundRepeat","minHeight","fontSize","icon","marginRight","heroContent","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardActions","justifyContent","cardContent","flexGrow","footer","Album","CssBaseline","exact","path","Container","paragraph","xs","sm","md","CardMedia","image","expandImg","CardActions","to","listImg","Boolean","window","location","hostname","match","ReactDOM","StrictMode","basename","process","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f3337e33.chunk.js","sourcesContent":["/* App.js */\nimport React from 'react'\nimport { CanvasJS, CanvasJSChart } from 'canvasjs-react-charts'\n\nconst defaultApiData = {\n  'Time Series (Daily)': {},\n}\n\n// price calculation rebased to $100 for comparison\nconst getBaseWeightedPrice = (price, startingPrice) =>\n  Number((100 / startingPrice) * price)\n\n// Get x axis data (simple date or datetime)\nconst getXData = (res) => {\n  if (!res['Time Series (Daily)']) return ['2021-01-01']\n  return Object.keys(res['Time Series (Daily)'])\n}\n\n// Get y axis data (price corresponding to it)\nconst getYData = (res) => {\n  if (!res['Time Series (Daily)']) return [{ '4.close': 0.0 }]\n  return Object.values(res['Time Series (Daily)'])\n}\n\nclass Canvas extends React.Component {\n  state = {\n    dataPoints: [],\n    spyDataPoints: [],\n  }\n\n  componentDidMount() {\n    const { data = defaultApiData, spyData } = this.props\n    const dataPoints = []\n    const timeIntervalKeys = getXData(data)\n    const timeIntervalValues = getYData(data)\n    const lastIndex = timeIntervalKeys.length - 1\n    const earliestDataPoint = timeIntervalValues[lastIndex]\n      ? timeIntervalValues[lastIndex]['4. close']\n      : 0\n    for (var i = lastIndex; i > 0; i--) {\n      dataPoints.push({\n        x: new Date(timeIntervalKeys[i]),\n        y: getBaseWeightedPrice(\n          timeIntervalValues[i]['4. close'],\n          earliestDataPoint\n        ),\n      })\n    }\n\n    const spyDataPoints = []\n    const spyTimeIntervalKeys = getXData(spyData)\n    const spyTimeIntervalValues = getYData(spyData)\n    const earliestSPYDataPoint = spyTimeIntervalValues[lastIndex]\n      ? spyTimeIntervalValues[lastIndex]['4. close']\n      : 0\n    for (var i = lastIndex; i > 0; i--) {\n      spyDataPoints.push({\n        x: new Date(spyTimeIntervalKeys[i]),\n        y: getBaseWeightedPrice(\n          spyTimeIntervalValues[i]['4. close'],\n          earliestSPYDataPoint\n        ),\n      })\n    }\n    this.setState({ dataPoints, spyDataPoints })\n\n    this.chart.render()\n  }\n\n  componentWillUnmount() {\n    this.chart = null\n  }\n\n  render() {\n    const { data, search } = this.props\n    const times = getXData(data)\n    const options = {\n      theme: 'light2',\n      animationEnabled: true,\n      title: {\n        text: `Daily stock Price of ${search} vs SPY`,\n      },\n      axisY: {\n        title: 'Price in USD',\n        prefix: '$',\n      },\n      axisX: {\n        title: 'Day',\n        interVal: 1,\n        interValType: 'day',\n        labelFormatter: function (e) {\n          return CanvasJS.formatDate(e.value, 'DD MMM')\n        },\n      },\n      toolTip: {\n        shared: true,\n      },\n      data: [\n        {\n          type: 'spline',\n          name: `${search}`,\n          showInLegend: true,\n          xValueType: 'dateTime',\n          xValueFormatString: 'DD MMM YYYY',\n          yValueFormatString: '$##.00',\n          dataPoints: this.state.dataPoints,\n        },\n        {\n          type: 'spline',\n          name: 'SPY',\n          showInLegend: true,\n          xValueType: 'dateTime',\n          xValueFormatString: 'DD MMM YYYY',\n          yValueFormatString: '$##.00',\n          dataPoints: this.state.spyDataPoints,\n        },\n      ],\n      navigator: {\n        slider: {\n          minimum: new Date(times[0]),\n          maximum: new Date(times[times.length - 1]),\n        },\n      },\n    }\n\n    const containerProps = {\n      width: '100%',\n      height: '450px',\n      margin: 'auto',\n    }\n\n    return (\n      <div>\n        <CanvasJSChart\n          containerProps={containerProps}\n          options={options}\n          onRef={(ref) => (this.chart = ref)}\n        />\n        {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n      </div>\n    )\n  }\n}\n\nexport default Canvas\n","import React, { useState, useEffect, useReducer } from 'react'\nimport axios from 'axios'\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      }\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      }\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      }\n    default:\n      throw new Error()\n  }\n}\n\nconst useDataApi = (initialUrl, initialData = {}) => {\n  const [url, setUrl] = useState(initialUrl)\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData,\n  })\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' })\n      try {\n        const result = await axios(url)\n        dispatch({ type: 'FETCH_SUCCESS', payload: result })\n      } catch (error) {\n        dispatch({ type: 'FETCH_FAILURE' })\n      }\n    }\n\n    fetchData()\n  }, [url])\n\n  const doFetch = (url) => setUrl(url)\n\n  return { ...state, doFetch }\n}\n\nexport default useDataApi\n","// Documentation for canvas js: https://canvasjs.com/docs\n// Documentationf for alpha advantage: https://www.alphavantage.co/documentation/\n\nimport React, { Fragment, useState, useEffect } from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Canvas from './Canvas'\nimport useDataApi from 'hooks/useData'\n\nconst API_KEY = '1PXX8A1J2QJQFTBP'\nconst TICKER = 'JPM'\nconst seriesType = 'TIME_SERIES_DAILY_ADJUSTED' // type of query\nconst overView = 'OVERVIEW' // type of query\n\n// regex to look for any point in the string that has a multiple of 3 digits in a row after it,\nexport const numberWithCommas = (x) => {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nconst initialTimeSeriesData = {\n  data: { 'Meta Data': { symbol: '' }, 'Time Series (Daily)': {} },\n}\nconst initialFundamentals = {\n  data: { Name: '', Exchange: '', Sector: '', MarketCapitalization: '' },\n}\n\nconst getSeriesData = (symbol) => {\n  const baseUrl = 'https://www.alphavantage.co/query'\n  return `${baseUrl}?function=${seriesType}&symbol=${symbol}&interval=Daily&apikey=${API_KEY}`\n}\n\nconst getFundamentals = (symbol) => {\n  const baseUrl = 'https://www.alphavantage.co/query'\n  return `${baseUrl}?function=${overView}&symbol=${symbol}&apikey=${API_KEY}`\n}\n\nfunction Fetcher() {\n  const [symbol, setSymbol] = useState(TICKER)\n  const [search, setSearch] = useState('')\n\n  const { data, isLoading, isError, doFetch } = useDataApi(\n    getSeriesData(search),\n    initialTimeSeriesData\n  )\n  const spyData = useDataApi(getSeriesData('SPY'), initialTimeSeriesData)\n\n  useEffect(() => {\n    if (search) {\n      let lastTime = 0\n      const now = new Date()\n      const timeFrame = 2000 // throttle requests within this time frame\n\n      if (!isLoading && now - lastTime >= timeFrame) {\n        doFetch(getSeriesData(search))\n        lastTime = now\n      }\n    }\n  }, [search, doFetch])\n\n  const {\n    data: fundamentalsData,\n    isLoading: fundamentalsIsLoading,\n    isError: fundamentalsIsError,\n    doFetch: fundamentalsFoFetch,\n  } = useDataApi(getFundamentals(search), initialFundamentals)\n  const {\n    Name,\n    Exchange,\n    Sector,\n    MarketCapitalization = 0,\n  } = fundamentalsData.data\n\n  useEffect(() => {\n    if (search) {\n      let lastTime = 0\n      const now = new Date()\n      const timeFrame = 2000 // throttle requests within this time frame\n\n      if (!fundamentalsIsLoading && now - lastTime >= timeFrame) {\n        fundamentalsFoFetch(getFundamentals(search))\n        lastTime = now\n      }\n    }\n  }, [search, fundamentalsFoFetch])\n\n  const apiError =\n    isError ||\n    fundamentalsIsError ||\n    data.data.Note ||\n    fundamentalsData.data.Note\n\n  return (\n    <Fragment>\n      <form\n        onSubmit={(event) => {\n          doFetch(getSeriesData(search))\n          event.preventDefault()\n        }}\n      >\n        <input\n          type=\"text\"\n          value={symbol}\n          onChange={(event) => setSymbol(event.target.value)}\n        />\n        <button onClick={() => setSearch(symbol)} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {!search && <div>Click search to get data for ticker symbol...</div>}\n      {apiError && <div>{data.data.Note}</div>}\n      {search && isLoading && <div>Loading ...</div>}\n      {!apiError && search && !isLoading && (\n        <div>\n          <p>{data['Meta Data'] && data['Meta Data'].symbol}</p>\n          <div style={{ margin: '10px auto', width: '70%' }}>\n            {/* {metaData.map(el => (\n              <Card variant=\"outlined\">\n                <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>\n                    {el.split(\". \")[1]}\n                  </Typography>\n                </CardContent>\n              </Card>\n            ))} */}\n            <Card variant=\"outlined\">\n              <CardContent>\n                <Typography color=\"textPrimary\" gutterBottom>\n                  {Name}\n                </Typography>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  Exchange: {Exchange}\n                </Typography>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  Sector: {Sector}\n                </Typography>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  Market CAP: ${numberWithCommas(MarketCapitalization)}\n                </Typography>\n              </CardContent>\n            </Card>\n          </div>\n          {/* <p>{data[\"Time Series (5min)\"]}</p> */}\n          <Canvas\n            search={search}\n            data={data.data}\n            spyData={spyData.data.data}\n          />\n        </div>\n      )}\n    </Fragment>\n  )\n}\n\nexport default Fetcher\n","import Fetcher from './Fetcher'\n\nexport default Fetcher\n","import React, { useState, useEffect } from 'react'\nimport { Table, Icon, Segment, Grid } from 'semantic-ui-react'\nimport './styles.css'\n\nconst tempData = [\n  {\n    type: 'Onboard Contractor',\n    status: 'Pending',\n    tasks: '2 of 4',\n    date: '2014-04-18',\n    name1: 'Create Zendesk Ticket',\n    name2: 'LDAP Access',\n    percent: 50,\n  },\n  {\n    type: 'Onboard Employee',\n    status: 'Done',\n    tasks: '1 of 3',\n    date: '2014-04-21',\n    name1: 'Equipment Setup',\n    name2: 'Microsoft Training',\n    percent: 100,\n  },\n  {\n    type: 'Onboard Contractor',\n    status: 'Error',\n    tasks: '3 of 3',\n    date: '2014-08-09',\n    name1: 'Create Zendesk Ticket',\n    name2: 'LDAP Access',\n    percent: 25,\n  },\n  {\n    type: 'Terminate Contractor',\n    status: 'Done',\n    tasks: '2 of 4',\n    date: '2014-04-24',\n    name1: 'Create Zendesk Ticket',\n    name2: 'LDAP Access',\n    percent: 100,\n  },\n  {\n    type: 'Terminate Contractor',\n    status: 'Pending',\n    tasks: '1 of 4',\n    date: '2014-04-26',\n    name1: 'Create Zendesk Ticket',\n    name2: 'LDAP Access',\n    percent: 90,\n  },\n]\n\nconst renderGridSubColumns = (item, index) => {\n  let taskName = item.name1\n  if (index > 1) taskName = item.name2\n  return (\n    <Grid columns={4}>\n      <Grid.Column>\n        <span>\n          {index}: {taskName}\n        </span>\n      </Grid.Column>\n      <Grid.Column>\n        <span>Status: {item.status}</span>\n      </Grid.Column>\n      <Grid.Column>\n        <span>Percent Complete: {item.percent}</span>\n      </Grid.Column>\n      <Grid.Column>\n        <span>\n          <button>Update</button>\n        </span>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nconst ExapndableTable = () => {\n  const [expandedRows, setExpanded] = useState([])\n  const [allItemRows, setData] = useState([])\n\n  useEffect(() => {\n    const handleRowClick = (rowId) => {\n      const currentExpandedRows = expandedRows\n      const isRowCurrentlyExpanded = currentExpandedRows.includes(rowId)\n\n      const newExpandedRows = isRowCurrentlyExpanded\n        ? currentExpandedRows.filter((id) => id !== rowId)\n        : currentExpandedRows.concat(rowId)\n\n      setExpanded(newExpandedRows)\n    }\n\n    // const renderItemCaret = (rowId) => {\n    //   const currentExpandedRows = expandedRows\n    //   const isRowCurrentlyExpanded = currentExpandedRows.includes(rowId);\n\n    //   if (isRowCurrentlyExpanded) {\n    //     return <Icon name=\"caret down\" />;\n    //   } else {\n    //     return <Icon name=\"caret right\" />;\n    //   }\n    // }\n\n    const renderItem = (item, index) => {\n      const itemRows = [\n        <Table.Row\n          onClick={() => handleRowClick(index)}\n          key={'row-data-' + index}\n        >\n          {/* <Table.Cell>{renderItemCaret(index)}</Table.Cell> */}\n          <Table.Cell>{item.type}</Table.Cell>\n          <Table.Cell>{item.status}</Table.Cell>\n          <Table.Cell>{item.date}</Table.Cell>\n          <Table.Cell>{item.tasks}</Table.Cell>\n        </Table.Row>,\n      ]\n\n      if (expandedRows.includes(index)) {\n        itemRows.push(\n          <Table.Row key={'row-expanded-' + index}>\n            <Table.Cell colSpan=\"5\">{renderItemDetails(item)}</Table.Cell>\n          </Table.Row>\n        )\n      }\n\n      return itemRows\n    }\n    let allItemRows = []\n    tempData.forEach((item, index) => {\n      const perItemRows = renderItem(item, index)\n      allItemRows = allItemRows.concat(perItemRows)\n    })\n    setData(allItemRows)\n  }, [expandedRows])\n\n  const renderItemDetails = (item) => (\n    <Segment basic>\n      <h2>2 Active Tasks</h2>\n      {renderGridSubColumns(item, 1)}\n      {renderGridSubColumns(item, 2)}\n    </Segment>\n  )\n\n  return (\n    <Table selectable>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Activity Type</Table.HeaderCell>\n          <Table.HeaderCell>Overall Status</Table.HeaderCell>\n          <Table.HeaderCell>Date Created</Table.HeaderCell>\n          <Table.HeaderCell>Tasks Completed</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>{allItemRows}</Table.Body>\n    </Table>\n  )\n}\n\nexport default ExapndableTable\n","import Table from './Table'\n\nexport default Table\n","export default (state, action) => {\n  switch (action.type) {\n    case 'update_chips':\n      return {\n        ...state,\n        chips: action.data,\n      }\n    case 'update_members':\n      return {\n        ...state,\n        members: action.data,\n      }\n    default:\n      return state\n  }\n}","// Global state for announcement dialog\nimport React, { createContext, useContext, useReducer } from 'react'\nimport listPageContext from './reducer'\n\nexport const StateContext = createContext()\n\nexport const StateProvider = ({ initialState, children }) => (\n  <StateContext.Provider value={useReducer(listPageContext, initialState)}>\n    {children}\n  </StateContext.Provider>\n)\n\nexport const useListPageContext = () => useContext(StateContext) // This is to avoid duplication on the consumer side\n","import React, { useState, useEffect } from 'react'\nimport { find, propEq } from 'ramda'\nimport {\n  Grid,\n  FormControl,\n  TextField,\n  MenuItem,\n  InputLabel,\n  Input,\n  Select,\n  Button,\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useListPageContext } from './context'\nimport './styles.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}))\n\nconst MemberSetup = (props) => {\n  const [name, setName] = useState('')\n  const [annual_fee, setFee] = useState(0)\n  const [membership_type, setType] = useState({ code: '' })\n  const [country, setCountry] = useState({ code: '' })\n  const [currency, setCurrency] = useState({ code: '' })\n  const [from_date, setFromDate] = useState('')\n\n  const {\n    countriesReference,\n    currenciesReference,\n    membershipTypesReference,\n  } = props\n  const [data, dispatch] = useListPageContext()\n  const { members } = data\n\n  useEffect(() => {\n    setName('John')\n    setFee(10)\n    setCountry(countriesReference[0])\n    setCurrency(currenciesReference[0])\n    setType(membershipTypesReference[0])\n    setFromDate('2021-05-24')\n  }, [])\n\n  const clearForm = () => {\n    setName('')\n    setFee(0)\n    setType('')\n    setCountry('')\n    setCurrency('')\n    setFromDate('')\n  }\n\n  const handleFormChange = (event, id) => {\n    const fieldId = id || event.target.id\n    switch (fieldId) {\n      case 'name':\n        setName(event.target.value)\n        break\n      case 'country':\n        setCountry(find(propEq('code', event.target.value), countriesReference))\n        break\n      case 'currency':\n        setCurrency(\n          find(propEq('code', event.target.value), currenciesReference)\n        )\n        break\n      case 'annual_fee':\n        setFee(event.target.value)\n        break\n      case 'membership_type':\n        setType(\n          find(propEq('code', event.target.value), membershipTypesReference)\n        )\n        break\n      case 'from_date':\n        setFromDate(event.target.value)\n        break\n      default:\n        break\n    }\n  }\n\n  const handleClick = (e) => {\n    e.preventDefault()\n    const updatedMembers = members\n    updatedMembers.push({\n      name: name,\n      country: country.description,\n      membership_type: membership_type.description,\n      currency: currency.description,\n      annual_fee: annual_fee,\n      from_date: from_date,\n      to_date: '30th Jun, 2021',\n    })\n    dispatch({ type: 'update_members', data: updatedMembers })\n    clearForm()\n  }\n\n  const classes = useStyles()\n\n  return (\n    <div>\n      <h3>Add new member</h3>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <Grid container justify=\"space-around\">\n          <FormControl>\n            <InputLabel htmlFor=\"name\">Name</InputLabel>\n            <Input\n              id=\"name\"\n              value={name}\n              onChange={(e) => handleFormChange(e, 'name')}\n            />\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"country\">Country</InputLabel>\n            <Select\n              labelId=\"country\"\n              id=\"country\"\n              value={country.code}\n              onChange={(e) => handleFormChange(e, 'country')}\n            >\n              {countriesReference.map((option) => (\n                <MenuItem\n                  id={`${option.code}_cntry`}\n                  key={option.code}\n                  value={option.code}\n                >\n                  {option.description}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"membership\">Type</InputLabel>\n            <Select\n              labelId=\"membership\"\n              id=\"membership\"\n              value={membership_type.code}\n              onChange={(e) => handleFormChange(e, 'membership_type')}\n            >\n              {membershipTypesReference.map((option) => (\n                <MenuItem\n                  id={`${option.code}_membership`}\n                  key={option.code}\n                  value={option.code}\n                >\n                  {option.description}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"membership\">Currency</InputLabel>\n            <Select\n              labelId=\"currency\"\n              id=\"currency\"\n              value={currency.code}\n              onChange={(e) => handleFormChange(e, 'currency')}\n            >\n              {currenciesReference.map((option) => (\n                <MenuItem\n                  id={`${option.code}_currency`}\n                  key={option.code}\n                  value={option.code}\n                >\n                  {option.description}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel htmlFor=\"annual_fee\">Annual Fee</InputLabel>\n            <Input\n              id=\"annual_fee\"\n              value={annual_fee}\n              onChange={(e) => handleFormChange(e, 'annual_fee')}\n              disabled={false}\n            />\n          </FormControl>\n          <FormControl>\n            <TextField\n              id=\"from_date\"\n              label=\"From Date\"\n              type=\"date\"\n              value={from_date}\n              onChange={(e) => handleFormChange(e, 'from_date')}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              disabled={false}\n            />\n          </FormControl>\n        </Grid>\n      </form>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleClick}\n        className={'addButton'}\n      >\n        Add\n      </Button>\n    </div>\n  )\n}\n\nexport default MemberSetup\n","export const headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n  {\n    id: 'membershipType',\n    numeric: false,\n    disablePadding: false,\n    label: 'Membership Type',\n  },\n  { id: 'country', numeric: false, disablePadding: false, label: 'Country' },\n  {\n    id: 'currency',\n    numeric: false,\n    disablePadding: false,\n    label: 'Currency',\n  },\n  { id: 'annual_fee', numeric: true, disablePadding: false, label: 'Fee' },\n  { id: 'from', numeric: false, disablePadding: false, label: 'From' },\n  { id: 'to', numeric: false, disablePadding: false, label: 'To' },\n]\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  TableSortLabel,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from '@material-ui/core'\n\nimport { headCells } from './config'\n\nfunction Head(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props\n  const sortHandler = (property) => (event) => {\n    onRequestSort(event, property)\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={sortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n}\n\nexport default Head\n","export const formatDate = (dateVal) => {\n  const options = {\n    weekday: 'short',\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  }\n  return new Date(dateVal).toLocaleDateString('en-US', options)\n}\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\nconst getComparator = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nexport const stableSort = (array, order, orderBy) => {\n  const comparator = getComparator(order, orderBy)\n  const stabilizedThis = array.map((el, index) => [el, index])\n  stabilizedThis.sort((a, b) => {\n    const newOrder = comparator(a[0], b[0])\n    if (newOrder !== 0) return newOrder\n    return a[1] - b[1]\n  })\n  return stabilizedThis.map((el) => el[0])\n}\n","// import moment from \"utils/moment\";\n\nexport const substitute = (template, obj) => {\n  return template.replace(/\\${([a-z0-9_]+)}/gi, (match, capture) => {\n    return obj[capture]\n  })\n}\n\n// function to format currency - takes in value and the currencyStyle\nexport const formatCurrency = (value, currencyStyle = 'USD') =>\n  `${new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: `${currencyStyle}`,\n  }).format(value)}`\n\n// // function to format date to normal form\n// export const formatDate = value => moment(new Date(value)).format(\"MM/DD/YYYY\");\n\n// // function to fomrat time to hh:mm:ss\n// export const formatTime = value => {\n//   return moment.tz(value, \"America/Los_Angeles\").format(\"HH:mm:ss\");\n// };\n\n// // function to fomrat date to MM/DD/YYYY pacific\n// export const formatDateInPacific = value =>\n//   moment.tz(value, \"America/Los_Angeles\").format(\"MM/DD/YYYY\");\n\n// // function to fomrat date time to MM/DD/YYYY HH:mm:ss z pacific\n// export const formatDateTimeInPacific = (value, format) =>\n//   //momentTimezone.tz(value, 'America/Los_Angeles').format(format)\n//   \"\";\n\n// // function to format date to normal form ignoring timeZone\n// export const formatDateIgnoringTimeZone = value =>\n//   moment.utc(value).format(\"MM/DD/YYYY\");\n\n// // function to format date and time to normal form\n// export const formatDateTimeIgnoringTimeZone = value =>\n//   moment(new Date(value)).format(\"MM/DD/YYYY HH:mm:ss\");\n\nexport const capitalize = (word) => word.charAt(0).toUpperCase() + word.slice(1)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nimport EnhancedTableHead from './Head'\nimport { formatDate, stableSort } from './utils'\nimport { formatCurrency } from '../../utils/string'\nimport { useListPageContext } from '../../ListPage/context' // TO DO: Make this generic\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}))\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles()\n  const { rows, selected, setSelected, dispatch } = props\n  const numSelected = selected.length\n\n  const deleteMembers = () => {\n    const updated = rows.filter((row, i) => selected[i] !== row.name)\n    dispatch({ type: 'update_members', data: updated })\n    setSelected([])\n  }\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Memberships\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\" onClick={deleteMembers}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  selected: PropTypes.arrayOf(PropTypes.string),\n  rows: PropTypes.array.isRequired,\n  dispatch: () => {},\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}))\n\nexport default function EnhancedTable() {\n  const classes = useStyles()\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [selected, setSelected] = React.useState([])\n  const [page, setPage] = React.useState(0)\n  const [dense, setDense] = React.useState(false)\n  const [rowsPerPage, setRowsPerPage] = React.useState(10)\n  const [data, dispatch] = useListPageContext()\n  const rows = data.members\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name)\n      setSelected(newSelecteds)\n      return\n    }\n    setSelected([])\n  }\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name)\n    let newSelected = []\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name)\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1))\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1))\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      )\n    }\n\n    setSelected(newSelected)\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked)\n  }\n\n  const isSelected = (name) => selected.indexOf(name) !== -1\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar\n          rows={rows}\n          selected={selected}\n          setSelected={setSelected}\n          dispatch={dispatch}\n        />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, order, orderBy)\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name)\n                  const labelId = `enhanced-table-checkbox-${index}`\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{\n                            'aria-labelledby': labelId,\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        align=\"center\"\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {row.membership_type}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.country}</TableCell>\n                      <TableCell align=\"center\">{row.currency}</TableCell>\n                      <TableCell align=\"right\">\n                        {formatCurrency(row.annual_fee)}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {formatDate(row.from_date)}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {formatDate(row.to_date)}\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  )\n}\n","import Table from './Table'\n\nexport default Table\n","import React from 'react'\n\nconst SVG = ({\n  style = {\n    position: 'absolute',\n    right: '5px',\n    bottom: '15px',\n    paddingRight: '4px',\n    enableBackground: 'new 0 0 451 451',\n  },\n  fill = '#000',\n  width = '15px',\n  height = '20px',\n  className = '',\n  viewBox = '0 0 40 26',\n}) => (\n  <svg\n    version=\"1.1\"\n    id=\"Capa_1\"\n    // xmlns=\"http://www.w3.org/2000/svg\"\n    // xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    x=\"0px\"\n    y=\"0px\"\n    width={width}\n    height={height}\n    viewBox=\"0 0 451 451\"\n    style={style}\n    // xml:space=\"preserve\"\n  >\n    <g>\n      <path\n        d=\"M447.05,428l-109.6-109.6c29.4-33.8,47.2-77.9,47.2-126.1C384.65,86.2,298.35,0,192.35,0C86.25,0,0.05,86.3,0.05,192.3\n\t\ts86.3,192.3,192.3,192.3c48.2,0,92.3-17.8,126.1-47.2L428.05,447c2.6,2.6,6.1,4,9.5,4s6.9-1.3,9.5-4\n\t\tC452.25,441.8,452.25,433.2,447.05,428z M26.95,192.3c0-91.2,74.2-165.3,165.3-165.3c91.2,0,165.3,74.2,165.3,165.3\n\t\ts-74.1,165.4-165.3,165.4C101.15,357.7,26.95,283.5,26.95,192.3z\"\n      />\n    </g>\n  </svg>\n)\n\nexport default SVG\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './search.css'\nimport SearchSVG from './images/search'\n\nconst Search = ({ searchBy, searchText, handleSearch }) => (\n  <div className=\"searchBox\">\n    <input\n      type=\"text\"\n      placeholder={`${searchBy} Search`}\n      value={searchText}\n      onChange={(e) => handleSearch(e.target.value)}\n    />\n    <SearchSVG />\n  </div>\n)\n\nSearch.propTypes = {\n  searchBy: PropTypes.string,\n  searchText: PropTypes.string.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n}\n\nexport default Search\n","import React from 'react'\nimport { find, propEq } from 'ramda'\nimport { PropTypes } from 'prop-types'\nimport { Chip } from '@material-ui/core'\nimport { useListPageContext } from './context'\nimport './styles.css'\n\nconst getNewMembers = (chips, members) => {\n  if (!chips.length) return members\n  let newMembers = []\n  chips.forEach((currChip) => {\n    const member =\n      find(propEq(currChip.filterBy, currChip.code), members) ||\n      find(propEq(currChip.filterBy, currChip.filterText), members)\n    if (member) newMembers.push(member)\n  })\n  return newMembers\n}\n\nconst Toolbar = ({ members }) => {\n  const [data, dispatch] = useListPageContext()\n  const { chips = [] } = data\n\n  const toggleChips = (chip) => {\n    let newchips = chips\n    const index = newchips.findIndex((item) => chip.code === item.code)\n    if (index === -1) {\n      newchips.push(chip)\n    } else {\n      newchips.splice(index, 1)\n    }\n    dispatch({ type: 'update_chips', data: newchips })\n    dispatch({\n      type: 'update_members',\n      data: getNewMembers(newchips, members),\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <div>\n        <div className=\"toolbar\">\n          <div className=\"wrapper\">\n            {chips.map((chip) => (\n              <Chip\n                key={chip.code}\n                label={chip.filterText}\n                onDelete={() => {\n                  toggleChips(chip)\n                }}\n                className={'memberChip'}\n                color=\"primary\"\n              />              \n            ))}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nToolbar.propTypes = {\n  data: PropTypes.array,\n  toggleChips: PropTypes.func,\n}\n\nexport default Toolbar\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { find, propEq } from 'ramda'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { useListPageContext } from './context'\n\nconst styles = (theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n})\n\nconst calcuateFilteredData = (chips, members) => {\n  if (!chips.length) return members\n  let newMembers = []\n  chips.forEach((currChip) => {\n    const member =\n      find(propEq(currChip.filterBy, currChip.code), members) ||\n      find(propEq(currChip.filterBy, currChip.filterText), members)\n    if (member) newMembers.push(member)\n  })\n  return newMembers\n}\n\nconst SectionList = (props) => {\n  const { classes, filterFacets, members, filterBy, isIchecked } = props\n\n  const [state, setState] = useState({\n    checked: [0],\n  })\n  const [{ chips }, dispatch] = useListPageContext()\n\n  const toggleChips = (chip) => {\n    let newchips = chips\n    const index = newchips.findIndex((item) => chip.code === item.code)\n    if (index === -1) {\n      newchips.push(chip)\n    } else {\n      newchips.splice(index, 1)\n    }\n    dispatch({ type: 'update_chips', data: newchips })\n    dispatch({\n      type: 'update_members',\n      data: calcuateFilteredData(newchips, members),\n    })\n  }\n\n  const handleToggle = (item, filterBy) => () => {\n    const { checked } = state\n    const index = checked.indexOf(item.code)\n    const newChecked = [...checked]\n\n    if (index === -1) {\n      newChecked.push(item.code)\n    } else {\n      newChecked.splice(index, 1)\n    }\n\n    setState({\n      checked: newChecked,\n    })\n\n    toggleChips({\n      filterBy: filterBy,\n      filterText: item.description,\n      code: item.code,\n    })\n  }\n\n  return (\n    <List className={classes.root}>\n      {filterFacets.map((item) => (\n        <ListItem\n          key={`#${item.code}`}\n          dense\n          button\n          onClick={handleToggle(item, filterBy)}\n        >\n          <Checkbox\n            checked={isIchecked(item.description)}\n            tabIndex={-1}\n            disableRipple\n          />\n          <ListItemText primary={`(${item.code}) ${item.description}`} />\n        </ListItem>\n      ))}\n    </List>\n  )\n}\n\nSectionList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  filterFacets: PropTypes.array,\n  searchText: PropTypes.string,\n  filterBy: PropTypes.string,\n  toggleChips: PropTypes.func,\n  isIchecked: PropTypes.func,\n}\n\nexport default withStyles(styles)(SectionList)\n// <List style={Object.assign({}, Style.SectionList)}>\n//   {props.filterFacets.map((item, index) => {\n//     if (\n//       item.description\n//         .toLowerCase()\n//         .indexOf(props.searchText.toLowerCase()) !== -1\n//     ) {\n//       return (\n//         <ListItem\n//           style={{ fontSize: 12 }}\n//           key={index}\n//           leftCheckbox={\n//             <Checkbox\n//               onCheck={event => {\n//                 props.toggleChips(\n//                   item.code,\n//                   item.description,\n//                   props.filterBy\n//                 );\n//               }}\n//               defaultChecked={props.isIchecked(item.description)}\n//             />\n//           }\n//           primaryText={item}\n//         />\n//       );\n//     } else {\n//       return <div>{item}</div>;\n//     }\n//   })}\n// </List>\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24 24H0V0h24v24z\",\n  fill: \"none\"\n});\n\nfunction SvgLeftBig(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLeftBig);\nexport default __webpack_public_path__ + \"static/media/left_big.b6a1d57b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  fill: \"none\"\n});\n\nfunction SvgRightBig(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRightBig);\nexport default __webpack_public_path__ + \"static/media/right_big.c126d230.svg\";\nexport { ForwardRef as ReactComponent };","import ListPage from './ListPage'\n\nexport default ListPage\n","import React, { useState } from 'react'\nimport Divider from '@material-ui/core/Divider'\nimport Memberships from './Memberships'\nimport FilterTable from '../Components/FilterTable'\nimport Search from './Search'\nimport Toolbar from './Chips'\nimport SubList from './SubList'\nimport { StateProvider } from './context/index'\nimport { ReactComponent as LeftArrow } from './images/left_big.svg'\nimport { ReactComponent as RightArrow } from './images/right_big.svg'\nimport { generateData } from './context/mockData'\n\nconst ListPage = (props) => {\n  const [\n    rows,\n    countriesReference,\n    currenciesReference,\n    membershipTypesReference,\n    initialChipData,\n  ] = generateData()\n  const [members, setMembers] = useState(rows)\n  const [chipData, setChipData] = useState(initialChipData)\n\n  const [searchTextCountries, setSearchTextCountries] = useState('')\n  const [searchTextCurrencies, setSearchTextCurrencies] = useState('')\n  const [searchTextMemberships, setSearchTextMemberships] = useState('')\n  const [open, setOpen] = useState(false)\n  const [sideWidth, setSideWidth] = useState('16.66%')\n  const [mainWidth, setMinWidth] = useState('83.33%')\n  const [rightIconVisibility, setIconVisibility] = useState('hidden')\n  const [mainDisplay, setMainDisplay] = useState('inherit')\n\n  const handleToggle = () => {\n    setOpen(!open)\n    setSideWidth(sideWidth === '16.66%' ? '3%' : '16.66%')\n    setMinWidth(mainWidth === '83.33%' ? '97%' : '83.33%')\n    setMainDisplay(mainDisplay === 'none' ? 'inherit' : 'none')\n    setIconVisibility(rightIconVisibility === 'hidden' ? 'visible' : 'hidden')\n  }\n\n  const isIchecked = (description) => {\n    const index = chipData.map((chip) => chip.filterText).indexOf(description)\n    return index === -1 ? false : true\n  }\n\n  const handleSearchCountries = (text) => {\n    setSearchTextCountries(text)\n  }\n\n  const handleSearchCurrencies = (text) => {\n    setSearchTextCurrencies(text)\n  }\n\n  const handleSearchMemberships = (text) => {\n    setSearchTextMemberships(text)\n  }\n\n  return (\n    <StateProvider initialState={{ chips: initialChipData, members: rows }}>\n      {\n        <div className=\"col-1-1 mainContent\">\n          <div\n            className=\"col-2-12\"\n            style={{\n              width: sideWidth,\n              overflowY: 'scroll',\n              maxHeight: '800px',\n              padding: '10px',\n              background: '#fff'\n            }}\n          >\n            <div style={Object.assign({}, { display: mainDisplay })}>\n              <div className=\"sidebarHeader\">\n                <div\n                  style={Object.assign(\n                    {},\n                    {\n                      float: 'left',\n                      padding: 5,\n                      width: '50%',\n                      textAlign: 'left',\n                    }\n                  )}\n                >\n                  Filters\n                </div>\n                <div\n                  style={Object.assign(\n                    {},\n                    {\n                      float: 'right',\n                      padding: 5,\n                      width: '50%',\n                      textAlign: 'right',\n                    }\n                  )}\n                >\n                  <LeftArrow onClick={handleToggle} alt=\"left\" />\n                </div>\n              </div>\n              <Divider />\n              <div>\n                <Search\n                  handleSearch={handleSearchCountries}\n                  searchText={searchTextCountries}\n                  searchBy={'Country'}\n                />\n                <SubList\n                  filterFacets={countriesReference}\n                  members={members}\n                  filterBy={'country'}\n                  searchText={searchTextCountries}\n                  isIchecked={isIchecked}\n                />\n              </div>\n              <Divider />\n              <div>\n                <Search\n                  handleSearch={handleSearchCurrencies}\n                  searchText={searchTextCurrencies}\n                  searchBy={'Currency'}\n                />\n                <SubList\n                  filterFacets={currenciesReference}\n                  members={members}\n                  filterBy={'currency'}\n                  searchText={searchTextCurrencies}\n                  isIchecked={isIchecked}\n                />\n              </div>\n              <Divider />\n              <div>\n                <Search\n                  handleSearch={handleSearchMemberships}\n                  searchText={searchTextMemberships}\n                  searchBy={'Membership Type'}\n                />\n                <SubList\n                  filterFacets={membershipTypesReference}\n                  members={members}\n                  filterBy={'membership_type'}\n                  searchText={searchTextMemberships}\n                  isIchecked={isIchecked}\n                />\n              </div>\n            </div>\n            <div style={Object.assign({}, { visibility: rightIconVisibility })}>\n              <h3 />\n              <RightArrow\n                style={Object.assign({}, { float: 'right' })}\n                onClick={handleToggle}\n                alt=\"right\"\n              />\n            </div>\n          </div>\n          <div\n            className=\"col-10-12\"\n            style={{\n              width: mainWidth,\n              position: 'relative',\n              overflowY: 'scroll',\n              maxHeight: '800px',\n              padding: '5px',\n              background: '#fff'\n            }}\n          >\n            <Toolbar members={members} />\n            <FilterTable />\n          </div>\n        </div>\n      }\n      <Memberships\n        countriesReference={countriesReference}\n        currenciesReference={currenciesReference}\n        membershipTypesReference={membershipTypesReference}\n      />\n    </StateProvider>\n  )\n}\n\nexport default ListPage\n","import faker from 'faker'\nimport { find, prop, propEq, uniqBy } from 'ramda'\n\nexport const generateData = () => {\n  let rows = []\n  for (var i = 0; i < 10; i++) {\n    rows.push({\n      id: i,\n      name: faker.name.findName(),\n      country: faker.address.country(),\n      currency: faker.finance.currencySymbol(),\n      annual_fee: faker.random.number(),\n      from_date: `${faker.date.past()}`,\n      to_date: `${faker.date.future()}`,\n      membership_type: 'Basic',\n    })\n  }\n  let currenciesReference = []\n  let countriesReference = []\n\n  const membershipTypesReference = [{ code: 'B', description: 'Basic' }]\n\n  const chipData = [\n    { filterBy: 'membership_type', filterText: 'Basic', code: 'B' },\n  ]\n\n  rows.forEach((row) => {\n    if (!find(propEq('code', row.currency))(currenciesReference))\n      currenciesReference.push({\n        code: row.currency,\n        description: row.currency,\n      })\n    if (!find(propEq('code', row.country))(countriesReference))\n      countriesReference.push({\n        code: row.country,\n        description: row.country,\n      })\n  })\n\n  return [\n    uniqBy(prop('id'), rows),\n    countriesReference,\n    currenciesReference,\n    membershipTypesReference,\n    chipData,\n  ]\n}\n","import NavBar from './NavBar'\n\nexport default NavBar\n","import React, { useEffect } from 'react'\nimport { AppBar, Toolbar } from '@material-ui/core'\nimport './styles.css'\n\nconst NavBar = () => {\n  const handleHomeClickResponsive = () => {\n    var x = document.getElementById('myTopnav')\n    if (x.className === 'topnav') {\n      x.className += ' responsive'\n    } else {\n      x.className = 'topnav'\n    }\n  }\n\n  useEffect(() => {\n    const pages = ['/', '/stocks', '/filter_table', '/expand_table']\n    var curPage = document.URL\n    curPage = curPage.substr(curPage.lastIndexOf('/'))\n    const routeIndex = pages.indexOf(curPage)\n  \n    // Applies color based on current page\n    const links = document.getElementById('myTopnav').children\n    links[routeIndex] && links[routeIndex].classList.add('current-link')\n  }, [])\n\n  return (\n    <AppBar position=\"static\" color=\"default\" elevation={0} className=\"appBar\">\n      <Toolbar>\n        <div className=\"topnav\" id=\"myTopnav\">\n          <a href={'/dashboard'}>Dashboard</a>\n          <a href={'/dashboard/stocks'}>Stock Symbol Tracker</a>\n          <a href={'/dashboard/filter_table'}>List Page</a>\n          <a href={'/dashboard/expand_table'}>Expandable Table</a>\n          <a href={'#'} className=\"icon\" onClick={handleHomeClickResponsive}>\n            <i className=\"fa fa-bars\"></i>\n          </a>\n        </div>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default NavBar\n","export default __webpack_public_path__ + \"static/media/chart.f22b8185.jpg\";","export default __webpack_public_path__ + \"static/media/list_table.4fe82166.png\";","export default __webpack_public_path__ + \"static/media/expand_table.5913f09d.png\";","import React from 'react'\nimport { Link, Route } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport StcokFetcher from 'StockFetcher'\nimport Table from 'Components/ExpandableTable'\nimport ListPage from 'ListPage'\nimport NavBar from 'Components/NavBar'\n\nimport './App.css'\nimport chart from './images/chart.jpg'\nimport listImg from './images/list_table.png'\nimport expandImg from './images/expand_table.png'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <a target=\"_blank\" href=\"https://aldizh.github.io/dashboard\">\n        Dashboard&nbsp;\n      </a>\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    position: 'relative',\n    textAlign: 'center',\n    backgroundImage: 'url(./images/background.jpg)',\n    backgroundRepeat: 'no-repeat',\n    minHeight: '100vh',\n    fontSize: 'calc(10px + 2vmin)'\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    // backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardActions: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    // backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}))\n\nexport default function Album() {\n  const classes = useStyles()\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div className=\"app\">\n        <Route\n          exact={true}\n          path=\"/\"\n          render={() => (\n            <>\n              <NavBar />\n              <main>\n                {/* Hero unit */}\n                <div className={classes.heroContent}>\n                  <Container maxWidth=\"sm\">\n                    <Typography\n                      variant=\"h4\"\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      gutterBottom\n                    >\n                      Sample React Projects\n                    </Typography>\n                    <Typography\n                      variant=\"h5\"\n                      align=\"center\"\n                      color=\"textSecondary\"\n                      paragraph\n                    >\n                      These are a just a few projects to showcase the\n                      versatility of react when it comes to building slick and\n                      efficient UI components.\n                    </Typography>\n                    {/* <div className={classes.heroButtons}>\n                    <Grid container spacing={2} justify=\"center\">\n                      <Grid item>\n                        <Button variant=\"outlined\" color=\"primary\">\n                          <Link to={'/'}>Profile</Link>\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </div> */}\n                  </Container>\n                </div>\n                <Container className={classes.cardGrid} maxWidth=\"md\">\n                  {/* End hero unit */}\n                  <Grid container spacing={4}>\n                    <Grid item key={1} xs={12} sm={6} md={4}>\n                      <Card className={classes.card}>\n                        <CardMedia\n                          className={classes.cardMedia}\n                          image={expandImg}\n                          title=\"Expandable Table\"\n                        />\n                        <CardContent className={classes.cardContent}>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Expandable Table\n                          </Typography>\n                          <Typography>\n                            Nice exapndable table to show more row specific\n                            info.\n                          </Typography>\n                        </CardContent>\n                        <CardActions className={classes.cardActions}>\n                          <Button size=\"small\" color=\"primary\">\n                            <Link to={'/expand_table'}>View</Link>\n                          </Button>\n                        </CardActions>\n                      </Card>\n                    </Grid>\n                    <Grid item key={2} xs={12} sm={6} md={4}>\n                      <Card className={classes.card}>\n                        <CardMedia\n                          className={classes.cardMedia}\n                          image={chart}\n                          title=\"Chart\"\n                        />\n                        <CardContent className={classes.cardContent}>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Stock Tracker\n                          </Typography>\n                          <Typography>\n                            Compare any ticker symbol against the S&P benchmark\n                            to get stock&apos performance.\n                          </Typography>\n                        </CardContent>\n                        <CardActions className={classes.cardActions}>\n                          <Button size=\"small\" color=\"primary\">\n                            <Link to={'/stocks'}>View</Link>\n                          </Button>\n                        </CardActions>\n                      </Card>\n                    </Grid>\n                    <Grid item key={3} xs={12} sm={6} md={4}>\n                      <Card className={classes.card}>\n                        <CardMedia\n                          className={classes.cardMedia}\n                          image={listImg}\n                          title=\"Filterable Table\"\n                        />\n                        <CardContent className={classes.cardContent}>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Filterable List\n                          </Typography>\n                          <Typography>\n                            List page with filter and pagination capabilities\n                          </Typography>\n                        </CardContent>\n                        <CardActions className={classes.cardActions}>\n                          <Button size=\"small\" color=\"primary\">\n                            <Link to={'/filter_table'}>View</Link>\n                          </Button>\n                        </CardActions>\n                      </Card>\n                    </Grid>\n                  </Grid>\n                </Container>\n              </main>\n              {/* Footer */}\n              <footer className={classes.footer}>\n                <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                  Thank you for visiting\n                </Typography>\n                <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                  Feel free to check out my&nbsp;\n                  <a target=\"_blank\" href=\"https://aldizhupani.medium.com/\">medium</a>{' blog'}\n                </Typography>\n                <Copyright />\n                </footer>\n              {/* End footer */}\n            </>\n          )}\n        />\n        <Route\n          exact\n          path=\"/stocks\"\n          render={() => (\n            <React.Fragment>\n              <NavBar />\n              <main>\n                <div className={classes.heroContent}>\n                  <StcokFetcher />\n                </div>\n              </main>\n            </React.Fragment>\n          )}\n        />\n        <Route\n          exact\n          path=\"/expand_table\"\n          render={() => (\n            <React.Fragment>\n              <NavBar />\n              <main>\n                <div className={classes.heroContent}>\n                  <Table />\n                </div>\n              </main>\n            </React.Fragment>\n          )}\n        />\n        <Route\n          exact\n          path=\"/filter_table\"\n          render={() => (\n            <React.Fragment>\n              <NavBar />\n              <main>\n                <div className={classes.heroContent}>\n                  <ListPage />\n                </div>\n              </main>\n            </React.Fragment>\n          )}\n        />\n      </div>\n    </React.Fragment>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}